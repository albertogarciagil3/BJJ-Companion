{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5000'\n});\n\n// Clasificaciones\nexport const getClassifications = async () => {\n  try {\n    const response = await api.get('/clasificaciones');\n    return response.data;\n  } catch (error) {\n    console.error('Error obteniendo las clasificaciones:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const createClassification = async newClassification => {\n  try {\n    const response = await api.post('/clasificaciones', newClassification);\n    return response.data;\n  } catch (error) {\n    console.error('Error creando una nueva clasificación:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const updateClassification = async classification => {\n  try {\n    const response = await api.put(`/clasificaciones/${classification._id}`, classification);\n    return response.data;\n  } catch (error) {\n    console.error('Error actualizando la clasificación:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const deleteClassification = async (id, name) => {\n  if (name === 'Nuevas Posiciones') {\n    alert('No se puede eliminar la clasificación predeterminada.');\n    return;\n  }\n  try {\n    const response = await api.delete(`/clasificaciones/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error eliminando la clasificación:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\n// Posiciones\nexport const getPositions = async () => {\n  try {\n    const response = await api.get('/positions');\n    return response.data;\n  } catch (error) {\n    console.error('Error obteniendo las posiciones:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const createPosition = async newPosition => {\n  try {\n    // Validación actualizada: asegúrate de que 'duality' tiene un ObjectId\n    if (!newPosition.duality) {\n      throw new Error(\"El campo 'duality' es obligatorio. Asegúrate de seleccionar una dualidad.\");\n    }\n    const response = await api.post('/positions', newPosition);\n    return response.data;\n  } catch (error) {\n    console.error('Error creando una nueva posición:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const updatePosition = async position => {\n  try {\n    // Validación actualizada: asegúrate de que 'duality' tiene un ObjectId\n    if (!position.duality) {\n      throw new Error(\"El campo 'duality' es obligatorio. Asegúrate de seleccionar una dualidad.\");\n    }\n    const response = await api.put(`/positions/${position._id}`, position);\n    return response.data;\n  } catch (error) {\n    console.error('Error actualizando la posición:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const deletePosition = async id => {\n  try {\n    const response = await api.delete(`/positions/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error eliminando la posición:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\n// Técnicas\nexport const getTechniques = async () => {\n  try {\n    const response = await api.get('/techniques');\n    return response.data;\n  } catch (error) {\n    console.error('Error obteniendo las técnicas:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const createTechnique = async newTechnique => {\n  try {\n    const response = await api.post('/techniques', newTechnique);\n    return response.data;\n  } catch (error) {\n    console.error('Error creando una nueva técnica:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const updateTechnique = async technique => {\n  try {\n    const response = await api.put(`/techniques/${technique._id}`, technique);\n    return response.data;\n  } catch (error) {\n    console.error('Error actualizando la técnica:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const deleteTechnique = async id => {\n  try {\n    const response = await api.delete(`/techniques/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error eliminando la técnica:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\n// IfEscenarios (Escenarios IF)\nexport const getIfEscenarios = async () => {\n  try {\n    const response = await api.get('/ifEscenarios');\n    return response.data;\n  } catch (error) {\n    console.error('Error obteniendo los escenarios IF:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const createIfEscenario = async newIfEscenario => {\n  try {\n    const response = await api.post('/ifEscenarios', newIfEscenario);\n    return response.data;\n  } catch (error) {\n    console.error('Error creando un nuevo escenario IF:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const updateIfEscenario = async ifEscenario => {\n  try {\n    const response = await api.put(`/ifEscenarios/${ifEscenario._id}`, ifEscenario);\n    return response.data;\n  } catch (error) {\n    console.error('Error actualizando el escenario IF:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const deleteIfEscenario = async id => {\n  try {\n    const response = await api.delete(`/ifEscenarios/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error eliminando el escenario IF:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\n// Dualidad\nexport const getDualities = async () => {\n  try {\n    const response = await api.get('/dualities');\n    return response.data;\n  } catch (error) {\n    console.error('Error obteniendo las dualidades:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const createDuality = async newDuality => {\n  try {\n    const response = await api.post('/dualities', newDuality);\n    return response.data;\n  } catch (error) {\n    console.error('Error creando una nueva dualidad:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const updateDuality = async duality => {\n  try {\n    const response = await api.put(`/dualities/${duality._id}`, duality);\n    return response.data;\n  } catch (error) {\n    console.error('Error actualizando la dualidad:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const deleteDuality = async id => {\n  try {\n    const response = await api.delete(`/dualities/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error eliminando la dualidad:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\n// Tipos de Técnica\nexport const getTechniqueTypes = async () => {\n  try {\n    const response = await api.get('/techniqueTypes');\n    return response.data;\n  } catch (error) {\n    console.error('Error obteniendo los tipos de técnicas:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const createTechniqueType = async newTechniqueType => {\n  try {\n    const response = await api.post('/techniqueTypes', newTechniqueType);\n    return response.data;\n  } catch (error) {\n    console.error('Error creando un nuevo tipo de técnica:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const updateTechniqueType = async techniqueType => {\n  try {\n    const response = await api.put(`/techniqueTypes/${techniqueType._id}`, techniqueType);\n    return response.data;\n  } catch (error) {\n    console.error('Error actualizando el tipo de técnica:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const deleteTechniqueType = async id => {\n  try {\n    const response = await api.delete(`/techniqueTypes/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error eliminando el tipo de técnica:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\n// Añadir un campo personalizado a todas las técnicas\nexport const addCustomField = async (fieldName, fieldType, options) => {\n  try {\n    const response = await api.post('/techniques/custom-field', {\n      fieldName,\n      fieldType,\n      options\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error al añadir campo personalizado:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\n// Eliminar un campo personalizado de todas las técnicas\nexport const deleteCustomField = async fieldName => {\n  try {\n    const response = await api.delete(`/techniques/custom-field/${fieldName}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al eliminar campo personalizado:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\n// Actualizar el valor de un campo personalizado en todas las técnicas\nexport const updateCustomFieldInAllTechniques = async (fieldName, newValue) => {\n  try {\n    const response = await api.put(`/techniques/custom-field/${fieldName}`, {\n      newValue\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar campo personalizado:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","getClassifications","response","get","data","error","console","message","createClassification","newClassification","post","updateClassification","classification","put","_id","deleteClassification","id","name","alert","delete","getPositions","createPosition","newPosition","duality","Error","updatePosition","position","deletePosition","getTechniques","createTechnique","newTechnique","updateTechnique","technique","deleteTechnique","getIfEscenarios","createIfEscenario","newIfEscenario","updateIfEscenario","ifEscenario","deleteIfEscenario","getDualities","createDuality","newDuality","updateDuality","deleteDuality","getTechniqueTypes","createTechniqueType","newTechniqueType","updateTechniqueType","techniqueType","deleteTechniqueType","addCustomField","fieldName","fieldType","options","deleteCustomField","updateCustomFieldInAllTechniques","newValue"],"sources":["C:/Users/alber/Desktop/bjj-companion/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:5000',\r\n});\r\n\r\n// Clasificaciones\r\nexport const getClassifications = async () => {\r\n    try {\r\n        const response = await api.get('/clasificaciones');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error obteniendo las clasificaciones:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const createClassification = async (newClassification) => {\r\n    try {\r\n        const response = await api.post('/clasificaciones', newClassification);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error creando una nueva clasificación:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateClassification = async (classification) => {\r\n    try {\r\n        const response = await api.put(`/clasificaciones/${classification._id}`, classification);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error actualizando la clasificación:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const deleteClassification = async (id, name) => {\r\n    if (name === 'Nuevas Posiciones') {\r\n        alert('No se puede eliminar la clasificación predeterminada.');\r\n        return;\r\n    }\r\n    try {\r\n        const response = await api.delete(`/clasificaciones/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error eliminando la clasificación:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Posiciones\r\nexport const getPositions = async () => {\r\n    try {\r\n        const response = await api.get('/positions');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error obteniendo las posiciones:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const createPosition = async (newPosition) => {\r\n    try {\r\n        // Validación actualizada: asegúrate de que 'duality' tiene un ObjectId\r\n        if (!newPosition.duality) {\r\n            throw new Error(\"El campo 'duality' es obligatorio. Asegúrate de seleccionar una dualidad.\");\r\n        }\r\n\r\n        const response = await api.post('/positions', newPosition);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error creando una nueva posición:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updatePosition = async (position) => {\r\n    try {\r\n        // Validación actualizada: asegúrate de que 'duality' tiene un ObjectId\r\n        if (!position.duality) {\r\n            throw new Error(\"El campo 'duality' es obligatorio. Asegúrate de seleccionar una dualidad.\");\r\n        }\r\n\r\n        const response = await api.put(`/positions/${position._id}`, position);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error actualizando la posición:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const deletePosition = async (id) => {\r\n    try {\r\n        const response = await api.delete(`/positions/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error eliminando la posición:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Técnicas\r\nexport const getTechniques = async () => {\r\n    try {\r\n        const response = await api.get('/techniques');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error obteniendo las técnicas:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const createTechnique = async (newTechnique) => {\r\n    try {\r\n        const response = await api.post('/techniques', newTechnique);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error creando una nueva técnica:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateTechnique = async (technique) => {\r\n    try {\r\n        const response = await api.put(`/techniques/${technique._id}`, technique);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error actualizando la técnica:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const deleteTechnique = async (id) => {\r\n    try {\r\n        const response = await api.delete(`/techniques/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error eliminando la técnica:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// IfEscenarios (Escenarios IF)\r\nexport const getIfEscenarios = async () => {\r\n    try {\r\n        const response = await api.get('/ifEscenarios');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error obteniendo los escenarios IF:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const createIfEscenario = async (newIfEscenario) => {\r\n    try {\r\n        const response = await api.post('/ifEscenarios', newIfEscenario);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error creando un nuevo escenario IF:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateIfEscenario = async (ifEscenario) => {\r\n    try {\r\n        const response = await api.put(`/ifEscenarios/${ifEscenario._id}`, ifEscenario);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error actualizando el escenario IF:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const deleteIfEscenario = async (id) => {\r\n    try {\r\n        const response = await api.delete(`/ifEscenarios/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error eliminando el escenario IF:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Dualidad\r\nexport const getDualities = async () => {\r\n    try {\r\n        const response = await api.get('/dualities');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error obteniendo las dualidades:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const createDuality = async (newDuality) => {\r\n    try {\r\n        const response = await api.post('/dualities', newDuality);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error creando una nueva dualidad:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateDuality = async (duality) => {\r\n    try {\r\n        const response = await api.put(`/dualities/${duality._id}`, duality);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error actualizando la dualidad:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const deleteDuality = async (id) => {\r\n    try {\r\n        const response = await api.delete(`/dualities/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error eliminando la dualidad:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Tipos de Técnica\r\nexport const getTechniqueTypes = async () => {\r\n    try {\r\n        const response = await api.get('/techniqueTypes');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error obteniendo los tipos de técnicas:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const createTechniqueType = async (newTechniqueType) => {\r\n    try {\r\n        const response = await api.post('/techniqueTypes', newTechniqueType);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error creando un nuevo tipo de técnica:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateTechniqueType = async (techniqueType) => {\r\n    try {\r\n        const response = await api.put(`/techniqueTypes/${techniqueType._id}`, techniqueType);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error actualizando el tipo de técnica:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const deleteTechniqueType = async (id) => {\r\n    try {\r\n        const response = await api.delete(`/techniqueTypes/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error eliminando el tipo de técnica:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Añadir un campo personalizado a todas las técnicas\r\nexport const addCustomField = async (fieldName, fieldType, options) => {\r\n    try {\r\n        const response = await api.post('/techniques/custom-field', { fieldName, fieldType, options });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al añadir campo personalizado:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Eliminar un campo personalizado de todas las técnicas\r\nexport const deleteCustomField = async (fieldName) => {\r\n    try {\r\n        const response = await api.delete(`/techniques/custom-field/${fieldName}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al eliminar campo personalizado:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Actualizar el valor de un campo personalizado en todas las técnicas\r\nexport const updateCustomFieldInAllTechniques = async (fieldName, newValue) => {\r\n    try {\r\n        const response = await api.put(`/techniques/custom-field/${fieldName}`, { newValue });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al actualizar campo personalizado:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE;AACb,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,kBAAkB,CAAC;IAClD,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IAC5G,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMG,oBAAoB,GAAG,MAAOC,iBAAiB,IAAK;EAC7D,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMJ,GAAG,CAACY,IAAI,CAAC,kBAAkB,EAAED,iBAAiB,CAAC;IACtE,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IAC7G,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMM,oBAAoB,GAAG,MAAOC,cAAc,IAAK;EAC1D,IAAI;IACA,MAAMV,QAAQ,GAAG,MAAMJ,GAAG,CAACe,GAAG,CAAC,oBAAoBD,cAAc,CAACE,GAAG,EAAE,EAAEF,cAAc,CAAC;IACxF,OAAOV,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IAC3G,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMU,oBAAoB,GAAG,MAAAA,CAAOC,EAAE,EAAEC,IAAI,KAAK;EACpD,IAAIA,IAAI,KAAK,mBAAmB,EAAE;IAC9BC,KAAK,CAAC,uDAAuD,CAAC;IAC9D;EACJ;EACA,IAAI;IACA,MAAMhB,QAAQ,GAAG,MAAMJ,GAAG,CAACqB,MAAM,CAAC,oBAAoBH,EAAE,EAAE,CAAC;IAC3D,OAAOd,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IACzG,MAAMF,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACA,MAAMlB,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,YAAY,CAAC;IAC5C,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IACvG,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMgB,cAAc,GAAG,MAAOC,WAAW,IAAK;EACjD,IAAI;IACA;IACA,IAAI,CAACA,WAAW,CAACC,OAAO,EAAE;MACtB,MAAM,IAAIC,KAAK,CAAC,2EAA2E,CAAC;IAChG;IAEA,MAAMtB,QAAQ,GAAG,MAAMJ,GAAG,CAACY,IAAI,CAAC,YAAY,EAAEY,WAAW,CAAC;IAC1D,OAAOpB,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IACxG,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMoB,cAAc,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACA;IACA,IAAI,CAACA,QAAQ,CAACH,OAAO,EAAE;MACnB,MAAM,IAAIC,KAAK,CAAC,2EAA2E,CAAC;IAChG;IAEA,MAAMtB,QAAQ,GAAG,MAAMJ,GAAG,CAACe,GAAG,CAAC,cAAca,QAAQ,CAACZ,GAAG,EAAE,EAAEY,QAAQ,CAAC;IACtE,OAAOxB,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IACtG,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMsB,cAAc,GAAG,MAAOX,EAAE,IAAK;EACxC,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMJ,GAAG,CAACqB,MAAM,CAAC,cAAcH,EAAE,EAAE,CAAC;IACrD,OAAOd,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IACpG,MAAMF,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMuB,aAAa,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACA,MAAM1B,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,aAAa,CAAC;IAC7C,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IACrG,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMwB,eAAe,GAAG,MAAOC,YAAY,IAAK;EACnD,IAAI;IACA,MAAM5B,QAAQ,GAAG,MAAMJ,GAAG,CAACY,IAAI,CAAC,aAAa,EAAEoB,YAAY,CAAC;IAC5D,OAAO5B,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IACvG,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAM0B,eAAe,GAAG,MAAOC,SAAS,IAAK;EAChD,IAAI;IACA,MAAM9B,QAAQ,GAAG,MAAMJ,GAAG,CAACe,GAAG,CAAC,eAAemB,SAAS,CAAClB,GAAG,EAAE,EAAEkB,SAAS,CAAC;IACzE,OAAO9B,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IACrG,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAM4B,eAAe,GAAG,MAAOjB,EAAE,IAAK;EACzC,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMJ,GAAG,CAACqB,MAAM,CAAC,eAAeH,EAAE,EAAE,CAAC;IACtD,OAAOd,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IACnG,MAAMF,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAM6B,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACA,MAAMhC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,eAAe,CAAC;IAC/C,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IAC1G,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAM8B,iBAAiB,GAAG,MAAOC,cAAc,IAAK;EACvD,IAAI;IACA,MAAMlC,QAAQ,GAAG,MAAMJ,GAAG,CAACY,IAAI,CAAC,eAAe,EAAE0B,cAAc,CAAC;IAChE,OAAOlC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IAC3G,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMgC,iBAAiB,GAAG,MAAOC,WAAW,IAAK;EACpD,IAAI;IACA,MAAMpC,QAAQ,GAAG,MAAMJ,GAAG,CAACe,GAAG,CAAC,iBAAiByB,WAAW,CAACxB,GAAG,EAAE,EAAEwB,WAAW,CAAC;IAC/E,OAAOpC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IAC1G,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMkC,iBAAiB,GAAG,MAAOvB,EAAE,IAAK;EAC3C,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMJ,GAAG,CAACqB,MAAM,CAAC,iBAAiBH,EAAE,EAAE,CAAC;IACxD,OAAOd,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IACxG,MAAMF,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMmC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACA,MAAMtC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,YAAY,CAAC;IAC5C,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IACvG,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMoC,aAAa,GAAG,MAAOC,UAAU,IAAK;EAC/C,IAAI;IACA,MAAMxC,QAAQ,GAAG,MAAMJ,GAAG,CAACY,IAAI,CAAC,YAAY,EAAEgC,UAAU,CAAC;IACzD,OAAOxC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IACxG,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMsC,aAAa,GAAG,MAAOpB,OAAO,IAAK;EAC5C,IAAI;IACA,MAAMrB,QAAQ,GAAG,MAAMJ,GAAG,CAACe,GAAG,CAAC,cAAcU,OAAO,CAACT,GAAG,EAAE,EAAES,OAAO,CAAC;IACpE,OAAOrB,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IACtG,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMuC,aAAa,GAAG,MAAO5B,EAAE,IAAK;EACvC,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMJ,GAAG,CAACqB,MAAM,CAAC,cAAcH,EAAE,EAAE,CAAC;IACrD,OAAOd,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IACpG,MAAMF,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMwC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACA,MAAM3C,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,iBAAiB,CAAC;IACjD,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IAC9G,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMyC,mBAAmB,GAAG,MAAOC,gBAAgB,IAAK;EAC3D,IAAI;IACA,MAAM7C,QAAQ,GAAG,MAAMJ,GAAG,CAACY,IAAI,CAAC,iBAAiB,EAAEqC,gBAAgB,CAAC;IACpE,OAAO7C,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IAC9G,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAM2C,mBAAmB,GAAG,MAAOC,aAAa,IAAK;EACxD,IAAI;IACA,MAAM/C,QAAQ,GAAG,MAAMJ,GAAG,CAACe,GAAG,CAAC,mBAAmBoC,aAAa,CAACnC,GAAG,EAAE,EAAEmC,aAAa,CAAC;IACrF,OAAO/C,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IAC7G,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAM6C,mBAAmB,GAAG,MAAOlC,EAAE,IAAK;EAC7C,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMJ,GAAG,CAACqB,MAAM,CAAC,mBAAmBH,EAAE,EAAE,CAAC;IAC1D,OAAOd,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IAC3G,MAAMF,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAM8C,cAAc,GAAG,MAAAA,CAAOC,SAAS,EAAEC,SAAS,EAAEC,OAAO,KAAK;EACnE,IAAI;IACA,MAAMpD,QAAQ,GAAG,MAAMJ,GAAG,CAACY,IAAI,CAAC,0BAA0B,EAAE;MAAE0C,SAAS;MAAEC,SAAS;MAAEC;IAAQ,CAAC,CAAC;IAC9F,OAAOpD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IAC3G,MAAMF,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMkD,iBAAiB,GAAG,MAAOH,SAAS,IAAK;EAClD,IAAI;IACA,MAAMlD,QAAQ,GAAG,MAAMJ,GAAG,CAACqB,MAAM,CAAC,4BAA4BiC,SAAS,EAAE,CAAC;IAC1E,OAAOlD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IAC7G,MAAMF,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMmD,gCAAgC,GAAG,MAAAA,CAAOJ,SAAS,EAAEK,QAAQ,KAAK;EAC3E,IAAI;IACA,MAAMvD,QAAQ,GAAG,MAAMJ,GAAG,CAACe,GAAG,CAAC,4BAA4BuC,SAAS,EAAE,EAAE;MAAEK;IAAS,CAAC,CAAC;IACrF,OAAOvD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IAC/G,MAAMF,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}