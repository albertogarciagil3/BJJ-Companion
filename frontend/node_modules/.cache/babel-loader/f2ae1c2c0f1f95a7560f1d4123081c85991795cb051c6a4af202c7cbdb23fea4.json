{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\Desktop\\\\bjj-companion\\\\frontend\\\\src\\\\components\\\\TechniqueTable.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { useReactTable, getCoreRowModel, flexRender } from '@tanstack/react-table';\nimport { getPositions, getTechniqueTypes, addCustomFieldToTechnique, deleteCustomFieldFromTechnique, getTechniques } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TechniqueTable = ({\n  updateTechnique,\n  deleteTechnique\n}) => {\n  _s();\n  const [techniquesState, setTechniquesState] = useState([]);\n  const [isEditing, setIsEditing] = useState(null);\n  const [editedTechnique, setEditedTechnique] = useState(null);\n  const [positions, setPositions] = useState([]);\n  const [techniqueTypes, setTechniqueTypes] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [newFieldType, setNewFieldType] = useState('');\n  const [newFieldName, setNewFieldName] = useState('');\n  const [fieldToDelete, setFieldToDelete] = useState(null);\n  useEffect(() => {\n    const fetchTechniques = async () => {\n      try {\n        const data = await getTechniques();\n        setTechniquesState(data);\n      } catch (error) {\n        console.error('Error al obtener técnicas:', error);\n      }\n    };\n    const fetchPositions = async () => {\n      try {\n        const data = await getPositions();\n        setPositions(data);\n      } catch (error) {\n        console.error('Error al obtener posiciones:', error);\n      }\n    };\n    const fetchTechniqueTypes = async () => {\n      try {\n        const data = await getTechniqueTypes();\n        setTechniqueTypes(data);\n      } catch (error) {\n        console.error('Error al obtener tipos de técnica:', error);\n      }\n    };\n    fetchTechniques();\n    fetchPositions();\n    fetchTechniqueTypes();\n  }, []);\n  const getPositionName = id => {\n    const position = positions.find(pos => pos._id === id);\n    return position ? position.name : 'Sin posición';\n  };\n  const getTechniqueTypeName = idArray => {\n    const names = idArray.map(id => {\n      const type = techniqueTypes.find(t => t._id === id);\n      return type ? type.name : 'Sin tipo';\n    }).join(', ');\n    return names;\n  };\n  const columns = useMemo(() => {\n    const baseColumns = [{\n      id: 'name',\n      accessorKey: 'name',\n      header: 'Nombre'\n    }, {\n      id: 'techniqueType',\n      accessorKey: 'techniqueType',\n      header: 'Tipo',\n      cell: ({\n        getValue\n      }) => getTechniqueTypeName(getValue())\n    }, {\n      id: 'positionStart',\n      accessorKey: 'positionStart',\n      header: 'Posición Inicial',\n      cell: ({\n        getValue\n      }) => getPositionName(getValue())\n    }, {\n      id: 'endPosition',\n      accessorKey: 'endPosition',\n      header: 'Posición Final',\n      cell: ({\n        getValue\n      }) => getPositionName(getValue())\n    }, {\n      id: 'proficiencyLevel',\n      accessorKey: 'proficiencyLevel',\n      header: 'Proficiency Level'\n    }, {\n      id: 'giNoGi',\n      accessorKey: 'giNoGi',\n      header: 'Gi/No Gi'\n    }, {\n      id: 'actions',\n      header: 'Acciones',\n      cell: ({\n        row\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(row.original),\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTechnique(row.original._id),\n          style: styles.deleteButton,\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }];\n    const customFieldColumns = [];\n    if (techniquesState.length > 0) {\n      const customFields = Object.keys(techniquesState[0].customFields || {});\n      customFieldColumns.push(...customFields.map(field => ({\n        id: field,\n        accessorKey: `customFields.${field}`,\n        header: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [field.charAt(0).toUpperCase() + field.slice(1), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteFieldClick(field),\n            style: styles.deleteFieldButton,\n            children: \"\\uD83D\\uDDD1\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this),\n        cell: ({\n          getValue\n        }) => getValue() || 'N/A'\n      })));\n    }\n    return [...baseColumns, ...customFieldColumns, {\n      id: 'addNewField',\n      header: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(true),\n        style: styles.addNewFieldButton,\n        children: \"Add New Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this),\n      cell: () => null\n    }];\n  }, [positions, techniqueTypes, techniquesState]);\n  const table = useReactTable({\n    data: techniquesState,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n  const handleEdit = technique => {\n    setIsEditing(technique._id);\n    setEditedTechnique({\n      ...technique\n    });\n  };\n  const handleSave = () => {\n    updateTechnique(editedTechnique);\n    setIsEditing(null);\n  };\n  const handleCancel = () => {\n    setIsEditing(null);\n    setEditedTechnique(null);\n  };\n  const handleAddNewField = async () => {\n    try {\n      await addCustomFieldToTechnique(newFieldName, newFieldType);\n      setShowModal(false);\n      setNewFieldName('');\n      setNewFieldType('');\n      const updatedTechniques = await getTechniques();\n      setTechniquesState(updatedTechniques);\n    } catch (error) {\n      console.error('Error al agregar nuevo campo:', error);\n    }\n  };\n  const handleDeleteFieldClick = field => {\n    setFieldToDelete(field);\n    setShowDeleteModal(true);\n  };\n  const handleConfirmDeleteField = async () => {\n    try {\n      await deleteCustomFieldFromTechnique(fieldToDelete);\n      setShowDeleteModal(false);\n      setFieldToDelete(null);\n      const updatedTechniques = await getTechniques();\n      setTechniquesState(updatedTechniques);\n    } catch (error) {\n      console.error('Error al eliminar campo personalizado:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Techniques\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            style: styles.cell,\n            children: flexRender(header.column.columnDef.header, header.getContext())\n          }, header.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }, this))\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: styles.cell,\n            children: flexRender(cell.column.columnDef.cell, cell.getContext())\n          }, cell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 33\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.modalOverlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.modal,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Agregar nuevo campo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Nombre del campo\",\n          value: newFieldName,\n          onChange: e => setNewFieldName(e.target.value),\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newFieldType,\n          onChange: e => setNewFieldType(e.target.value),\n          style: styles.input,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona el tipo de dato\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"string\",\n            children: \"Texto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"number\",\n            children: \"N\\xFAmero\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"rating\",\n            children: \"Calificaci\\xF3n (1 a 10)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"boolean\",\n            children: \"Checklist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddNewField,\n          style: styles.saveButton,\n          children: \"Agregar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          style: styles.closeButton,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }, this), showDeleteModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.modalOverlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.modal,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\xBFEliminar el campo \\\"\", fieldToDelete, \"\\\"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirmDeleteField,\n          style: styles.deleteButton,\n          children: \"Confirmar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowDeleteModal(false),\n          style: styles.closeButton,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 9\n  }, this);\n};\n_s(TechniqueTable, \"o3OnQ0QAwvd3LDkI1wcvTFRtesM=\", false, function () {\n  return [useReactTable];\n});\n_c = TechniqueTable;\nconst styles = {\n  table: {\n    width: '100%',\n    borderCollapse: 'collapse',\n    border: '1px solid black'\n  },\n  cell: {\n    textAlign: 'left',\n    border: '1px solid black',\n    padding: '8px'\n  },\n  deleteButton: {\n    color: 'red'\n  },\n  addNewFieldButton: {\n    color: 'blue'\n  },\n  deleteFieldButton: {\n    background: 'none',\n    border: 'none',\n    color: 'red',\n    cursor: 'pointer'\n  },\n  modalOverlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modal: {\n    backgroundColor: 'white',\n    padding: '2rem',\n    borderRadius: '5px',\n    width: '300px'\n  },\n  input: {\n    width: '100%',\n    marginBottom: '1rem',\n    padding: '0.5rem'\n  },\n  saveButton: {\n    marginRight: '0.5rem'\n  },\n  closeButton: {\n    color: 'red'\n  }\n};\nexport default TechniqueTable;\nvar _c;\n$RefreshReg$(_c, \"TechniqueTable\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","useReactTable","getCoreRowModel","flexRender","getPositions","getTechniqueTypes","addCustomFieldToTechnique","deleteCustomFieldFromTechnique","getTechniques","jsxDEV","_jsxDEV","Fragment","_Fragment","TechniqueTable","updateTechnique","deleteTechnique","_s","techniquesState","setTechniquesState","isEditing","setIsEditing","editedTechnique","setEditedTechnique","positions","setPositions","techniqueTypes","setTechniqueTypes","showModal","setShowModal","showDeleteModal","setShowDeleteModal","newFieldType","setNewFieldType","newFieldName","setNewFieldName","fieldToDelete","setFieldToDelete","fetchTechniques","data","error","console","fetchPositions","fetchTechniqueTypes","getPositionName","id","position","find","pos","_id","name","getTechniqueTypeName","idArray","names","map","type","t","join","columns","baseColumns","accessorKey","header","cell","getValue","row","children","onClick","handleEdit","original","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","deleteButton","customFieldColumns","length","customFields","Object","keys","push","field","charAt","toUpperCase","slice","handleDeleteFieldClick","deleteFieldButton","addNewFieldButton","table","technique","handleSave","handleCancel","handleAddNewField","updatedTechniques","handleConfirmDeleteField","getHeaderGroups","headerGroup","headers","column","columnDef","getContext","getRowModel","rows","getVisibleCells","modalOverlay","modal","placeholder","value","onChange","e","target","input","saveButton","closeButton","_c","width","borderCollapse","border","textAlign","padding","color","background","cursor","top","left","right","bottom","backgroundColor","display","justifyContent","alignItems","borderRadius","marginBottom","marginRight","$RefreshReg$"],"sources":["C:/Users/alber/Desktop/bjj-companion/frontend/src/components/TechniqueTable.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\r\nimport { useReactTable, getCoreRowModel, flexRender } from '@tanstack/react-table';\r\nimport { getPositions, getTechniqueTypes, addCustomFieldToTechnique, deleteCustomFieldFromTechnique, getTechniques } from '../services/api';\r\n\r\nconst TechniqueTable = ({ updateTechnique, deleteTechnique }) => {\r\n    const [techniquesState, setTechniquesState] = useState([]);\r\n    const [isEditing, setIsEditing] = useState(null);\r\n    const [editedTechnique, setEditedTechnique] = useState(null);\r\n    const [positions, setPositions] = useState([]);\r\n    const [techniqueTypes, setTechniqueTypes] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const [newFieldType, setNewFieldType] = useState('');\r\n    const [newFieldName, setNewFieldName] = useState('');\r\n    const [fieldToDelete, setFieldToDelete] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchTechniques = async () => {\r\n            try {\r\n                const data = await getTechniques();\r\n                setTechniquesState(data);\r\n            } catch (error) {\r\n                console.error('Error al obtener técnicas:', error);\r\n            }\r\n        };\r\n\r\n        const fetchPositions = async () => {\r\n            try {\r\n                const data = await getPositions();\r\n                setPositions(data);\r\n            } catch (error) {\r\n                console.error('Error al obtener posiciones:', error);\r\n            }\r\n        };\r\n\r\n        const fetchTechniqueTypes = async () => {\r\n            try {\r\n                const data = await getTechniqueTypes();\r\n                setTechniqueTypes(data);\r\n            } catch (error) {\r\n                console.error('Error al obtener tipos de técnica:', error);\r\n            }\r\n        };\r\n\r\n        fetchTechniques();\r\n        fetchPositions();\r\n        fetchTechniqueTypes();\r\n    }, []);\r\n\r\n    const getPositionName = (id) => {\r\n        const position = positions.find((pos) => pos._id === id);\r\n        return position ? position.name : 'Sin posición';\r\n    };\r\n\r\n    const getTechniqueTypeName = (idArray) => {\r\n        const names = idArray\r\n            .map((id) => {\r\n                const type = techniqueTypes.find((t) => t._id === id);\r\n                return type ? type.name : 'Sin tipo';\r\n            })\r\n            .join(', ');\r\n        return names;\r\n    };\r\n\r\n    const columns = useMemo(() => {\r\n        const baseColumns = [\r\n            { id: 'name', accessorKey: 'name', header: 'Nombre' },\r\n            {\r\n                id: 'techniqueType',\r\n                accessorKey: 'techniqueType',\r\n                header: 'Tipo',\r\n                cell: ({ getValue }) => getTechniqueTypeName(getValue()),\r\n            },\r\n            {\r\n                id: 'positionStart',\r\n                accessorKey: 'positionStart',\r\n                header: 'Posición Inicial',\r\n                cell: ({ getValue }) => getPositionName(getValue()),\r\n            },\r\n            {\r\n                id: 'endPosition',\r\n                accessorKey: 'endPosition',\r\n                header: 'Posición Final',\r\n                cell: ({ getValue }) => getPositionName(getValue()),\r\n            },\r\n            { id: 'proficiencyLevel', accessorKey: 'proficiencyLevel', header: 'Proficiency Level' },\r\n            { id: 'giNoGi', accessorKey: 'giNoGi', header: 'Gi/No Gi' },\r\n            {\r\n                id: 'actions',\r\n                header: 'Acciones',\r\n                cell: ({ row }) => (\r\n                    <>\r\n                        <button onClick={() => handleEdit(row.original)}>Editar</button>\r\n                        <button\r\n                            onClick={() => deleteTechnique(row.original._id)}\r\n                            style={styles.deleteButton}\r\n                        >\r\n                            Eliminar\r\n                        </button>\r\n                    </>\r\n                ),\r\n            },\r\n        ];\r\n\r\n        const customFieldColumns = [];\r\n        if (techniquesState.length > 0) {\r\n            const customFields = Object.keys(techniquesState[0].customFields || {});\r\n            customFieldColumns.push(\r\n                ...customFields.map((field) => ({\r\n                    id: field,\r\n                    accessorKey: `customFields.${field}`,\r\n                    header: (\r\n                        <div>\r\n                            {field.charAt(0).toUpperCase() + field.slice(1)}\r\n                            <button onClick={() => handleDeleteFieldClick(field)} style={styles.deleteFieldButton}>🗑️</button>\r\n                        </div>\r\n                    ),\r\n                    cell: ({ getValue }) => getValue() || 'N/A',\r\n                }))\r\n            );\r\n        }\r\n\r\n        return [\r\n            ...baseColumns,\r\n            ...customFieldColumns,\r\n            {\r\n                id: 'addNewField',\r\n                header: (\r\n                    <button onClick={() => setShowModal(true)} style={styles.addNewFieldButton}>\r\n                        Add New Field\r\n                    </button>\r\n                ),\r\n                cell: () => null,\r\n            },\r\n        ];\r\n    }, [positions, techniqueTypes, techniquesState]);\r\n\r\n    const table = useReactTable({\r\n        data: techniquesState,\r\n        columns,\r\n        getCoreRowModel: getCoreRowModel(),\r\n    });\r\n\r\n    const handleEdit = (technique) => {\r\n        setIsEditing(technique._id);\r\n        setEditedTechnique({ ...technique });\r\n    };\r\n\r\n    const handleSave = () => {\r\n        updateTechnique(editedTechnique);\r\n        setIsEditing(null);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsEditing(null);\r\n        setEditedTechnique(null);\r\n    };\r\n\r\n    const handleAddNewField = async () => {\r\n        try {\r\n            await addCustomFieldToTechnique(newFieldName, newFieldType);\r\n            setShowModal(false);\r\n            setNewFieldName('');\r\n            setNewFieldType('');\r\n            const updatedTechniques = await getTechniques();\r\n            setTechniquesState(updatedTechniques);\r\n        } catch (error) {\r\n            console.error('Error al agregar nuevo campo:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeleteFieldClick = (field) => {\r\n        setFieldToDelete(field);\r\n        setShowDeleteModal(true);\r\n    };\r\n\r\n    const handleConfirmDeleteField = async () => {\r\n        try {\r\n            await deleteCustomFieldFromTechnique(fieldToDelete);\r\n            setShowDeleteModal(false);\r\n            setFieldToDelete(null);\r\n            const updatedTechniques = await getTechniques();\r\n            setTechniquesState(updatedTechniques);\r\n        } catch (error) {\r\n            console.error('Error al eliminar campo personalizado:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Techniques</h1>\r\n            <table style={styles.table}>\r\n                <thead>\r\n                    {table.getHeaderGroups().map((headerGroup) => (\r\n                        <tr key={headerGroup.id}>\r\n                            {headerGroup.headers.map((header) => (\r\n                                <th key={header.id} style={styles.cell}>\r\n                                    {flexRender(header.column.columnDef.header, header.getContext())}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody>\r\n                    {table.getRowModel().rows.map((row) => (\r\n                        <tr key={row.id}>\r\n                            {row.getVisibleCells().map((cell) => (\r\n                                <td key={cell.id} style={styles.cell}>\r\n                                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            {showModal && (\r\n                <div style={styles.modalOverlay}>\r\n                    <div style={styles.modal}>\r\n                        <h2>Agregar nuevo campo</h2>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Nombre del campo\"\r\n                            value={newFieldName}\r\n                            onChange={(e) => setNewFieldName(e.target.value)}\r\n                            style={styles.input}\r\n                        />\r\n                        <select\r\n                            value={newFieldType}\r\n                            onChange={(e) => setNewFieldType(e.target.value)}\r\n                            style={styles.input}\r\n                        >\r\n                            <option value=\"\">Selecciona el tipo de dato</option>\r\n                            <option value=\"string\">Texto</option>\r\n                            <option value=\"number\">Número</option>\r\n                            <option value=\"rating\">Calificación (1 a 10)</option>\r\n                            <option value=\"boolean\">Checklist</option>\r\n                        </select>\r\n                        <button onClick={handleAddNewField} style={styles.saveButton}>\r\n                            Agregar\r\n                        </button>\r\n                        <button onClick={() => setShowModal(false)} style={styles.closeButton}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {showDeleteModal && (\r\n                <div style={styles.modalOverlay}>\r\n                    <div style={styles.modal}>\r\n                        <h2>¿Eliminar el campo \"{fieldToDelete}\"?</h2>\r\n                        <button onClick={handleConfirmDeleteField} style={styles.deleteButton}>\r\n                            Confirmar\r\n                        </button>\r\n                        <button onClick={() => setShowDeleteModal(false)} style={styles.closeButton}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    table: {\r\n        width: '100%',\r\n        borderCollapse: 'collapse',\r\n        border: '1px solid black',\r\n    },\r\n    cell: {\r\n        textAlign: 'left',\r\n        border: '1px solid black',\r\n        padding: '8px',\r\n    },\r\n    deleteButton: {\r\n        color: 'red',\r\n    },\r\n    addNewFieldButton: {\r\n        color: 'blue',\r\n    },\r\n    deleteFieldButton: {\r\n        background: 'none',\r\n        border: 'none',\r\n        color: 'red',\r\n        cursor: 'pointer',\r\n    },\r\n    modalOverlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    modal: {\r\n        backgroundColor: 'white',\r\n        padding: '2rem',\r\n        borderRadius: '5px',\r\n        width: '300px',\r\n    },\r\n    input: {\r\n        width: '100%',\r\n        marginBottom: '1rem',\r\n        padding: '0.5rem',\r\n    },\r\n    saveButton: {\r\n        marginRight: '0.5rem',\r\n    },\r\n    closeButton: {\r\n        color: 'red',\r\n    },\r\n};\r\n\r\nexport default TechniqueTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}