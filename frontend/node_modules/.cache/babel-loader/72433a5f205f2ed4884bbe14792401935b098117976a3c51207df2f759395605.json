{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\Desktop\\\\bjj-companion\\\\frontend\\\\src\\\\components\\\\TechniqueForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TechniqueTypeForm from './TechniqueTypeForm';\nimport PositionForm from './PositionForm';\nimport IfEscenarioForm from './IfEscenarioForm';\nimport { getTechniqueCustomFields } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TechniqueForm = ({\n  addTechnique\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [techniqueType, setTechniqueType] = useState('');\n  const [positionStart, setPositionStart] = useState('');\n  const [temporalPositions, setTemporalPositions] = useState([]);\n  const [endPosition, setEndPosition] = useState('');\n  const [ifScenarios, setIfScenarios] = useState('');\n  const [media, setMedia] = useState('');\n  const [externalLinks, setExternalLinks] = useState('');\n  const [relatedPositions, setRelatedPositions] = useState([]);\n  const [relatedTechniques, setRelatedTechniques] = useState('');\n  const [proficiencyLevel, setProficiencyLevel] = useState(1);\n  const [giNoGi, setGiNoGi] = useState('both');\n  const [practiceToday, setPracticeToday] = useState(false);\n  const [positionsList, setPositionsList] = useState([]);\n  const [techniquesList, setTechniquesList] = useState([]);\n  const [techniqueTypesList, setTechniqueTypesList] = useState([]);\n  const [ifsList, setIfsList] = useState([]);\n  const [TechniqueCustomFields, setTechniqueCustomFields] = useState({});\n  const [customFields, setCustomFields] = useState([]); // Para almacenar los customFields del backend\n  const [showTechniqueTypeForm, setShowTechniqueTypeForm] = useState(false);\n  const [showPositionForm, setShowPositionForm] = useState(false);\n  const [showIfForm, setShowIfForm] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [positionsResponse, techniquesResponse, typesResponse, ifsResponse, customFieldsResponse] = await Promise.all([axios.get('http://localhost:5000/positions'), axios.get('http://localhost:5000/techniques'), axios.get('http://localhost:5000/techniquetypes'), axios.get('http://localhost:5000/ifescenarios'), getTechniqueCustomFields() // Obtenemos los campos personalizados del backend\n        ]);\n        setPositionsList(positionsResponse.data);\n        setTechniquesList(techniquesResponse.data);\n        setTechniqueTypesList(typesResponse.data);\n        setIfsList(ifsResponse.data);\n        setCustomFields(customFieldsResponse); // Guardamos los customFields\n      } catch (error) {\n        console.error('Error al obtener datos:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAddTemporalPosition = () => {\n    setTemporalPositions([...temporalPositions, '']);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const techniqueData = {\n      name,\n      techniqueType,\n      positionStart,\n      temporalPositions,\n      endPosition,\n      ifScenarios,\n      media: media.split(',').map(m => m.trim()),\n      externalLinks: externalLinks.split(',').map(link => link.trim()),\n      relatedPositions,\n      relatedTechniques,\n      proficiencyLevel,\n      giNoGi,\n      practiceToday,\n      TechniqueCustomFields\n    };\n    addTechnique(techniqueData).then(() => {\n      setName('');\n      setTechniqueType('');\n      setPositionStart('');\n      setTemporalPositions([]);\n      setEndPosition('');\n      setIfScenarios('');\n      setMedia('');\n      setExternalLinks('');\n      setRelatedPositions([]);\n      setRelatedTechniques('');\n      setProficiencyLevel(1);\n      setGiNoGi('both');\n      setPracticeToday(false);\n      setTechniqueCustomFields({});\n    }).catch(error => {\n      console.error('Error al agregar la tÃ©cnica:', error);\n    });\n  };\n\n  // Renderiza cada campo personalizado dependiendo de su tipo\n  const renderCustomFieldInput = field => {\n    const {\n      _id,\n      name,\n      type,\n      options\n    } = field;\n    switch (type) {\n      case 'Text':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: name,\n          value: TechniqueCustomFields[_id] || '',\n          onChange: e => setTechniqueCustomFields({\n            ...TechniqueCustomFields,\n            [_id]: e.target.value\n          }),\n          style: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this);\n      case 'Number':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: name,\n          value: TechniqueCustomFields[_id] || '',\n          onChange: e => setTechniqueCustomFields({\n            ...TechniqueCustomFields,\n            [_id]: e.target.value\n          }),\n          style: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this);\n      case 'Select':\n        return /*#__PURE__*/_jsxDEV(\"select\", {\n          value: TechniqueCustomFields[_id] || '',\n          onChange: e => setTechniqueCustomFields({\n            ...TechniqueCustomFields,\n            [_id]: e.target.value\n          }),\n          style: styles.selectField,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: [\"Select \", name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: opt,\n            children: opt\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this);\n      case 'Multiselect':\n        return /*#__PURE__*/_jsxDEV(\"select\", {\n          multiple: true,\n          value: TechniqueCustomFields[_id] || [],\n          onChange: e => {\n            const selectedOptions = Array.from(e.target.selectedOptions, option => option.value);\n            setTechniqueCustomFields({\n              ...TechniqueCustomFields,\n              [_id]: selectedOptions\n            });\n          },\n          style: styles.selectField,\n          children: options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: opt,\n            children: opt\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this);\n      case 'Date':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: TechniqueCustomFields[_id] || '',\n          onChange: e => setTechniqueCustomFields({\n            ...TechniqueCustomFields,\n            [_id]: e.target.value\n          }),\n          style: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this);\n      case 'Hyperlink':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          placeholder: name,\n          value: TechniqueCustomFields[_id] || '',\n          onChange: e => setTechniqueCustomFields({\n            ...TechniqueCustomFields,\n            [_id]: e.target.value\n          }),\n          style: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this);\n      case 'Multimedia':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setTechniqueCustomFields({\n            ...TechniqueCustomFields,\n            [_id]: e.target.files\n          }),\n          style: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: styles.formContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      style: styles.label,\n      children: \"Nombre de la T\\xE9cnica:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      required: true,\n      style: styles.inputField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        children: \"Campos Personalizados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), customFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.customFieldContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: [field.name, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this), renderCustomFieldInput(field)]\n      }, field._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      style: styles.submitButton,\n      children: \"A\\xF1adir T\\xE9cnica\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this), showTechniqueTypeForm && /*#__PURE__*/_jsxDEV(TechniqueTypeForm, {\n      onClose: () => setShowTechniqueTypeForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 39\n    }, this), showPositionForm && /*#__PURE__*/_jsxDEV(PositionForm, {\n      onClose: () => setShowPositionForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 34\n    }, this), showIfForm && /*#__PURE__*/_jsxDEV(IfEscenarioForm, {\n      onClose: () => setShowIfForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 9\n  }, this);\n};\n_s(TechniqueForm, \"7nnDzK2wUNy+zeFJGkzLdRCDiag=\");\n_c = TechniqueForm;\nconst styles = {\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxWidth: '500px',\n    padding: '1rem',\n    border: '1px solid #ddd',\n    borderRadius: '8px',\n    boxShadow: '0 0 10px rgba(0,0,0,0.1)'\n  },\n  label: {\n    marginBottom: '0.3rem',\n    fontWeight: 'bold'\n  },\n  inputField: {\n    marginBottom: '1rem',\n    padding: '0.5rem',\n    width: '100%',\n    borderRadius: '4px',\n    border: '1px solid #ddd'\n  },\n  selectField: {\n    marginBottom: '1rem',\n    padding: '0.5rem',\n    width: '100%',\n    borderRadius: '4px',\n    border: '1px solid #ddd'\n  },\n  submitButton: {\n    marginTop: '1rem',\n    padding: '0.5rem 1rem',\n    backgroundColor: '#4CAF50',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer'\n  },\n  customFieldContainer: {\n    marginBottom: '1rem'\n  }\n};\nexport default TechniqueForm;\nvar _c;\n$RefreshReg$(_c, \"TechniqueForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","TechniqueTypeForm","PositionForm","IfEscenarioForm","getTechniqueCustomFields","jsxDEV","_jsxDEV","TechniqueForm","addTechnique","_s","name","setName","techniqueType","setTechniqueType","positionStart","setPositionStart","temporalPositions","setTemporalPositions","endPosition","setEndPosition","ifScenarios","setIfScenarios","media","setMedia","externalLinks","setExternalLinks","relatedPositions","setRelatedPositions","relatedTechniques","setRelatedTechniques","proficiencyLevel","setProficiencyLevel","giNoGi","setGiNoGi","practiceToday","setPracticeToday","positionsList","setPositionsList","techniquesList","setTechniquesList","techniqueTypesList","setTechniqueTypesList","ifsList","setIfsList","TechniqueCustomFields","setTechniqueCustomFields","customFields","setCustomFields","showTechniqueTypeForm","setShowTechniqueTypeForm","showPositionForm","setShowPositionForm","showIfForm","setShowIfForm","fetchData","positionsResponse","techniquesResponse","typesResponse","ifsResponse","customFieldsResponse","Promise","all","get","data","error","console","handleAddTemporalPosition","handleSubmit","e","preventDefault","techniqueData","split","map","m","trim","link","then","catch","renderCustomFieldInput","field","_id","type","options","placeholder","value","onChange","target","style","styles","inputField","fileName","_jsxFileName","lineNumber","columnNumber","selectField","children","opt","idx","multiple","selectedOptions","Array","from","option","files","onSubmit","formContainer","label","required","customFieldContainer","submitButton","onClose","_c","display","flexDirection","maxWidth","padding","border","borderRadius","boxShadow","marginBottom","fontWeight","width","marginTop","backgroundColor","color","cursor","$RefreshReg$"],"sources":["C:/Users/alber/Desktop/bjj-companion/frontend/src/components/TechniqueForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport TechniqueTypeForm from './TechniqueTypeForm';\r\nimport PositionForm from './PositionForm';\r\nimport IfEscenarioForm from './IfEscenarioForm';\r\nimport { getTechniqueCustomFields } from '../services/api';\r\n\r\nconst TechniqueForm = ({ addTechnique }) => {\r\n    const [name, setName] = useState('');\r\n    const [techniqueType, setTechniqueType] = useState('');\r\n    const [positionStart, setPositionStart] = useState('');\r\n    const [temporalPositions, setTemporalPositions] = useState([]);\r\n    const [endPosition, setEndPosition] = useState('');\r\n    const [ifScenarios, setIfScenarios] = useState('');\r\n    const [media, setMedia] = useState('');\r\n    const [externalLinks, setExternalLinks] = useState('');\r\n    const [relatedPositions, setRelatedPositions] = useState([]);\r\n    const [relatedTechniques, setRelatedTechniques] = useState('');\r\n    const [proficiencyLevel, setProficiencyLevel] = useState(1);\r\n    const [giNoGi, setGiNoGi] = useState('both');\r\n    const [practiceToday, setPracticeToday] = useState(false);\r\n    const [positionsList, setPositionsList] = useState([]);\r\n    const [techniquesList, setTechniquesList] = useState([]);\r\n    const [techniqueTypesList, setTechniqueTypesList] = useState([]);\r\n    const [ifsList, setIfsList] = useState([]);\r\n    const [TechniqueCustomFields, setTechniqueCustomFields] = useState({});\r\n    const [customFields, setCustomFields] = useState([]); // Para almacenar los customFields del backend\r\n    const [showTechniqueTypeForm, setShowTechniqueTypeForm] = useState(false);\r\n    const [showPositionForm, setShowPositionForm] = useState(false);\r\n    const [showIfForm, setShowIfForm] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const [positionsResponse, techniquesResponse, typesResponse, ifsResponse, customFieldsResponse] = await Promise.all([\r\n                    axios.get('http://localhost:5000/positions'),\r\n                    axios.get('http://localhost:5000/techniques'),\r\n                    axios.get('http://localhost:5000/techniquetypes'),\r\n                    axios.get('http://localhost:5000/ifescenarios'),\r\n                    getTechniqueCustomFields() // Obtenemos los campos personalizados del backend\r\n                ]);\r\n                setPositionsList(positionsResponse.data);\r\n                setTechniquesList(techniquesResponse.data);\r\n                setTechniqueTypesList(typesResponse.data);\r\n                setIfsList(ifsResponse.data);\r\n                setCustomFields(customFieldsResponse); // Guardamos los customFields\r\n            } catch (error) {\r\n                console.error('Error al obtener datos:', error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleAddTemporalPosition = () => {\r\n        setTemporalPositions([...temporalPositions, '']);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const techniqueData = {\r\n            name,\r\n            techniqueType,\r\n            positionStart,\r\n            temporalPositions,\r\n            endPosition,\r\n            ifScenarios,\r\n            media: media.split(',').map((m) => m.trim()),\r\n            externalLinks: externalLinks.split(',').map((link) => link.trim()),\r\n            relatedPositions,\r\n            relatedTechniques,\r\n            proficiencyLevel,\r\n            giNoGi,\r\n            practiceToday,\r\n            TechniqueCustomFields,\r\n        };\r\n        addTechnique(techniqueData)\r\n            .then(() => {\r\n                setName('');\r\n                setTechniqueType('');\r\n                setPositionStart('');\r\n                setTemporalPositions([]);\r\n                setEndPosition('');\r\n                setIfScenarios('');\r\n                setMedia('');\r\n                setExternalLinks('');\r\n                setRelatedPositions([]);\r\n                setRelatedTechniques('');\r\n                setProficiencyLevel(1);\r\n                setGiNoGi('both');\r\n                setPracticeToday(false);\r\n                setTechniqueCustomFields({});\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error al agregar la tÃ©cnica:', error);\r\n            });\r\n    };\r\n\r\n    // Renderiza cada campo personalizado dependiendo de su tipo\r\n    const renderCustomFieldInput = (field) => {\r\n        const { _id, name, type, options } = field;\r\n\r\n        switch (type) {\r\n            case 'Text':\r\n                return (\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder={name}\r\n                        value={TechniqueCustomFields[_id] || ''}\r\n                        onChange={(e) => setTechniqueCustomFields({ ...TechniqueCustomFields, [_id]: e.target.value })}\r\n                        style={styles.inputField}\r\n                    />\r\n                );\r\n            case 'Number':\r\n                return (\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder={name}\r\n                        value={TechniqueCustomFields[_id] || ''}\r\n                        onChange={(e) => setTechniqueCustomFields({ ...TechniqueCustomFields, [_id]: e.target.value })}\r\n                        style={styles.inputField}\r\n                    />\r\n                );\r\n            case 'Select':\r\n                return (\r\n                    <select\r\n                        value={TechniqueCustomFields[_id] || ''}\r\n                        onChange={(e) => setTechniqueCustomFields({ ...TechniqueCustomFields, [_id]: e.target.value })}\r\n                        style={styles.selectField}\r\n                    >\r\n                        <option value=\"\">Select {name}</option>\r\n                        {options.map((opt, idx) => (\r\n                            <option key={idx} value={opt}>\r\n                                {opt}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                );\r\n            case 'Multiselect':\r\n                return (\r\n                    <select\r\n                        multiple\r\n                        value={TechniqueCustomFields[_id] || []}\r\n                        onChange={(e) => {\r\n                            const selectedOptions = Array.from(\r\n                                e.target.selectedOptions,\r\n                                (option) => option.value\r\n                            );\r\n                            setTechniqueCustomFields({ ...TechniqueCustomFields, [_id]: selectedOptions });\r\n                        }}\r\n                        style={styles.selectField}\r\n                    >\r\n                        {options.map((opt, idx) => (\r\n                            <option key={idx} value={opt}>\r\n                                {opt}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                );\r\n            case 'Date':\r\n                return (\r\n                    <input\r\n                        type=\"date\"\r\n                        value={TechniqueCustomFields[_id] || ''}\r\n                        onChange={(e) => setTechniqueCustomFields({ ...TechniqueCustomFields, [_id]: e.target.value })}\r\n                        style={styles.inputField}\r\n                    />\r\n                );\r\n            case 'Hyperlink':\r\n                return (\r\n                    <input\r\n                        type=\"url\"\r\n                        placeholder={name}\r\n                        value={TechniqueCustomFields[_id] || ''}\r\n                        onChange={(e) => setTechniqueCustomFields({ ...TechniqueCustomFields, [_id]: e.target.value })}\r\n                        style={styles.inputField}\r\n                    />\r\n                );\r\n            case 'Multimedia':\r\n                return (\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={(e) => setTechniqueCustomFields({ ...TechniqueCustomFields, [_id]: e.target.files })}\r\n                        style={styles.inputField}\r\n                    />\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} style={styles.formContainer}>\r\n            {/* Campos Predeterminados */}\r\n            <label style={styles.label}>Nombre de la TÃ©cnica:</label>\r\n            <input\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                required\r\n                style={styles.inputField}\r\n            />\r\n\r\n            {/* Otros campos predeterminados... */}\r\n            {/* Custom Fields Expansibles */}\r\n            <details>\r\n                <summary>Campos Personalizados</summary>\r\n                {customFields.map((field) => (\r\n                    <div key={field._id} style={styles.customFieldContainer}>\r\n                        <label style={styles.label}>{field.name}:</label>\r\n                        {renderCustomFieldInput(field)}\r\n                    </div>\r\n                ))}\r\n            </details>\r\n\r\n            <button type=\"submit\" style={styles.submitButton}>AÃ±adir TÃ©cnica</button>\r\n\r\n            {/* Formularios Modulares */}\r\n            {showTechniqueTypeForm && <TechniqueTypeForm onClose={() => setShowTechniqueTypeForm(false)} />}\r\n            {showPositionForm && <PositionForm onClose={() => setShowPositionForm(false)} />}\r\n            {showIfForm && <IfEscenarioForm onClose={() => setShowIfForm(false)} />}\r\n        </form>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        maxWidth: '500px',\r\n        padding: '1rem',\r\n        border: '1px solid #ddd',\r\n        borderRadius: '8px',\r\n        boxShadow: '0 0 10px rgba(0,0,0,0.1)',\r\n    },\r\n    label: {\r\n        marginBottom: '0.3rem',\r\n        fontWeight: 'bold',\r\n    },\r\n    inputField: {\r\n        marginBottom: '1rem',\r\n        padding: '0.5rem',\r\n        width: '100%',\r\n        borderRadius: '4px',\r\n        border: '1px solid #ddd',\r\n    },\r\n    selectField: {\r\n        marginBottom: '1rem',\r\n        padding: '0.5rem',\r\n        width: '100%',\r\n        borderRadius: '4px',\r\n        border: '1px solid #ddd',\r\n    },\r\n    submitButton: {\r\n        marginTop: '1rem',\r\n        padding: '0.5rem 1rem',\r\n        backgroundColor: '#4CAF50',\r\n        color: '#fff',\r\n        border: 'none',\r\n        borderRadius: '4px',\r\n        cursor: 'pointer',\r\n    },\r\n    customFieldContainer: {\r\n        marginBottom: '1rem',\r\n    },\r\n};\r\n\r\nexport default TechniqueForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,wBAAwB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACkB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC0B,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC4B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC8B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACgC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACkC,MAAM,EAAEC,SAAS,CAAC,GAAGnC,QAAQ,CAAC,MAAM,CAAC;EAC5C,MAAM,CAACoC,aAAa,EAAEC,gBAAgB,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACsC,aAAa,EAAEC,gBAAgB,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACwC,cAAc,EAAEC,iBAAiB,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC0C,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAAC4C,OAAO,EAAEC,UAAU,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC8C,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG/C,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtE,MAAM,CAACgD,YAAY,EAAEC,eAAe,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACkD,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGnD,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACoD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrD,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACsD,UAAU,EAAEC,aAAa,CAAC,GAAGvD,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACZ,MAAMuD,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAM,CAACC,iBAAiB,EAAEC,kBAAkB,EAAEC,aAAa,EAAEC,WAAW,EAAEC,oBAAoB,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAChH7D,KAAK,CAAC8D,GAAG,CAAC,iCAAiC,CAAC,EAC5C9D,KAAK,CAAC8D,GAAG,CAAC,kCAAkC,CAAC,EAC7C9D,KAAK,CAAC8D,GAAG,CAAC,sCAAsC,CAAC,EACjD9D,KAAK,CAAC8D,GAAG,CAAC,oCAAoC,CAAC,EAC/C1D,wBAAwB,CAAC,CAAC,CAAC;QAAA,CAC9B,CAAC;QACFiC,gBAAgB,CAACkB,iBAAiB,CAACQ,IAAI,CAAC;QACxCxB,iBAAiB,CAACiB,kBAAkB,CAACO,IAAI,CAAC;QAC1CtB,qBAAqB,CAACgB,aAAa,CAACM,IAAI,CAAC;QACzCpB,UAAU,CAACe,WAAW,CAACK,IAAI,CAAC;QAC5BhB,eAAe,CAACY,oBAAoB,CAAC,CAAC,CAAC;MAC3C,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ,CAAC;IACDV,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,yBAAyB,GAAGA,CAAA,KAAM;IACpCjD,oBAAoB,CAAC,CAAC,GAAGD,iBAAiB,EAAE,EAAE,CAAC,CAAC;EACpD,CAAC;EAED,MAAMmD,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,aAAa,GAAG;MAClB5D,IAAI;MACJE,aAAa;MACbE,aAAa;MACbE,iBAAiB;MACjBE,WAAW;MACXE,WAAW;MACXE,KAAK,EAAEA,KAAK,CAACiD,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;MAC5ClD,aAAa,EAAEA,aAAa,CAAC+C,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEG,IAAI,IAAKA,IAAI,CAACD,IAAI,CAAC,CAAC,CAAC;MAClEhD,gBAAgB;MAChBE,iBAAiB;MACjBE,gBAAgB;MAChBE,MAAM;MACNE,aAAa;MACbU;IACJ,CAAC;IACDpC,YAAY,CAAC8D,aAAa,CAAC,CACtBM,IAAI,CAAC,MAAM;MACRjE,OAAO,CAAC,EAAE,CAAC;MACXE,gBAAgB,CAAC,EAAE,CAAC;MACpBE,gBAAgB,CAAC,EAAE,CAAC;MACpBE,oBAAoB,CAAC,EAAE,CAAC;MACxBE,cAAc,CAAC,EAAE,CAAC;MAClBE,cAAc,CAAC,EAAE,CAAC;MAClBE,QAAQ,CAAC,EAAE,CAAC;MACZE,gBAAgB,CAAC,EAAE,CAAC;MACpBE,mBAAmB,CAAC,EAAE,CAAC;MACvBE,oBAAoB,CAAC,EAAE,CAAC;MACxBE,mBAAmB,CAAC,CAAC,CAAC;MACtBE,SAAS,CAAC,MAAM,CAAC;MACjBE,gBAAgB,CAAC,KAAK,CAAC;MACvBU,wBAAwB,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CACDgC,KAAK,CAAEb,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD,CAAC,CAAC;EACV,CAAC;;EAED;EACA,MAAMc,sBAAsB,GAAIC,KAAK,IAAK;IACtC,MAAM;MAAEC,GAAG;MAAEtE,IAAI;MAAEuE,IAAI;MAAEC;IAAQ,CAAC,GAAGH,KAAK;IAE1C,QAAQE,IAAI;MACR,KAAK,MAAM;QACP,oBACI3E,OAAA;UACI2E,IAAI,EAAC,MAAM;UACXE,WAAW,EAAEzE,IAAK;UAClB0E,KAAK,EAAExC,qBAAqB,CAACoC,GAAG,CAAC,IAAI,EAAG;UACxCK,QAAQ,EAAGjB,CAAC,IAAKvB,wBAAwB,CAAC;YAAE,GAAGD,qBAAqB;YAAE,CAACoC,GAAG,GAAGZ,CAAC,CAACkB,MAAM,CAACF;UAAM,CAAC,CAAE;UAC/FG,KAAK,EAAEC,MAAM,CAACC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAEV,KAAK,QAAQ;QACT,oBACIvF,OAAA;UACI2E,IAAI,EAAC,QAAQ;UACbE,WAAW,EAAEzE,IAAK;UAClB0E,KAAK,EAAExC,qBAAqB,CAACoC,GAAG,CAAC,IAAI,EAAG;UACxCK,QAAQ,EAAGjB,CAAC,IAAKvB,wBAAwB,CAAC;YAAE,GAAGD,qBAAqB;YAAE,CAACoC,GAAG,GAAGZ,CAAC,CAACkB,MAAM,CAACF;UAAM,CAAC,CAAE;UAC/FG,KAAK,EAAEC,MAAM,CAACC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAEV,KAAK,QAAQ;QACT,oBACIvF,OAAA;UACI8E,KAAK,EAAExC,qBAAqB,CAACoC,GAAG,CAAC,IAAI,EAAG;UACxCK,QAAQ,EAAGjB,CAAC,IAAKvB,wBAAwB,CAAC;YAAE,GAAGD,qBAAqB;YAAE,CAACoC,GAAG,GAAGZ,CAAC,CAACkB,MAAM,CAACF;UAAM,CAAC,CAAE;UAC/FG,KAAK,EAAEC,MAAM,CAACM,WAAY;UAAAC,QAAA,gBAE1BzF,OAAA;YAAQ8E,KAAK,EAAC,EAAE;YAAAW,QAAA,GAAC,SAAO,EAACrF,IAAI;UAAA;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,EACtCX,OAAO,CAACV,GAAG,CAAC,CAACwB,GAAG,EAAEC,GAAG,kBAClB3F,OAAA;YAAkB8E,KAAK,EAAEY,GAAI;YAAAD,QAAA,EACxBC;UAAG,GADKC,GAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAER,CACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAEjB,KAAK,aAAa;QACd,oBACIvF,OAAA;UACI4F,QAAQ;UACRd,KAAK,EAAExC,qBAAqB,CAACoC,GAAG,CAAC,IAAI,EAAG;UACxCK,QAAQ,EAAGjB,CAAC,IAAK;YACb,MAAM+B,eAAe,GAAGC,KAAK,CAACC,IAAI,CAC9BjC,CAAC,CAACkB,MAAM,CAACa,eAAe,EACvBG,MAAM,IAAKA,MAAM,CAAClB,KACvB,CAAC;YACDvC,wBAAwB,CAAC;cAAE,GAAGD,qBAAqB;cAAE,CAACoC,GAAG,GAAGmB;YAAgB,CAAC,CAAC;UAClF,CAAE;UACFZ,KAAK,EAAEC,MAAM,CAACM,WAAY;UAAAC,QAAA,EAEzBb,OAAO,CAACV,GAAG,CAAC,CAACwB,GAAG,EAAEC,GAAG,kBAClB3F,OAAA;YAAkB8E,KAAK,EAAEY,GAAI;YAAAD,QAAA,EACxBC;UAAG,GADKC,GAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAER,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAEjB,KAAK,MAAM;QACP,oBACIvF,OAAA;UACI2E,IAAI,EAAC,MAAM;UACXG,KAAK,EAAExC,qBAAqB,CAACoC,GAAG,CAAC,IAAI,EAAG;UACxCK,QAAQ,EAAGjB,CAAC,IAAKvB,wBAAwB,CAAC;YAAE,GAAGD,qBAAqB;YAAE,CAACoC,GAAG,GAAGZ,CAAC,CAACkB,MAAM,CAACF;UAAM,CAAC,CAAE;UAC/FG,KAAK,EAAEC,MAAM,CAACC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAEV,KAAK,WAAW;QACZ,oBACIvF,OAAA;UACI2E,IAAI,EAAC,KAAK;UACVE,WAAW,EAAEzE,IAAK;UAClB0E,KAAK,EAAExC,qBAAqB,CAACoC,GAAG,CAAC,IAAI,EAAG;UACxCK,QAAQ,EAAGjB,CAAC,IAAKvB,wBAAwB,CAAC;YAAE,GAAGD,qBAAqB;YAAE,CAACoC,GAAG,GAAGZ,CAAC,CAACkB,MAAM,CAACF;UAAM,CAAC,CAAE;UAC/FG,KAAK,EAAEC,MAAM,CAACC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAEV,KAAK,YAAY;QACb,oBACIvF,OAAA;UACI2E,IAAI,EAAC,MAAM;UACXI,QAAQ,EAAGjB,CAAC,IAAKvB,wBAAwB,CAAC;YAAE,GAAGD,qBAAqB;YAAE,CAACoC,GAAG,GAAGZ,CAAC,CAACkB,MAAM,CAACiB;UAAM,CAAC,CAAE;UAC/FhB,KAAK,EAAEC,MAAM,CAACC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAEV;QACI,OAAO,IAAI;IACnB;EACJ,CAAC;EAED,oBACIvF,OAAA;IAAMkG,QAAQ,EAAErC,YAAa;IAACoB,KAAK,EAAEC,MAAM,CAACiB,aAAc;IAAAV,QAAA,gBAEtDzF,OAAA;MAAOiF,KAAK,EAAEC,MAAM,CAACkB,KAAM;MAAAX,QAAA,EAAC;IAAqB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACzDvF,OAAA;MACI2E,IAAI,EAAC,MAAM;MACXG,KAAK,EAAE1E,IAAK;MACZ2E,QAAQ,EAAGjB,CAAC,IAAKzD,OAAO,CAACyD,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;MACzCuB,QAAQ;MACRpB,KAAK,EAAEC,MAAM,CAACC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAIFvF,OAAA;MAAAyF,QAAA,gBACIzF,OAAA;QAAAyF,QAAA,EAAS;MAAqB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,EACvC/C,YAAY,CAAC0B,GAAG,CAAEO,KAAK,iBACpBzE,OAAA;QAAqBiF,KAAK,EAAEC,MAAM,CAACoB,oBAAqB;QAAAb,QAAA,gBACpDzF,OAAA;UAAOiF,KAAK,EAAEC,MAAM,CAACkB,KAAM;UAAAX,QAAA,GAAEhB,KAAK,CAACrE,IAAI,EAAC,GAAC;QAAA;UAAAgF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAChDf,sBAAsB,CAACC,KAAK,CAAC;MAAA,GAFxBA,KAAK,CAACC,GAAG;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd,CACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAEVvF,OAAA;MAAQ2E,IAAI,EAAC,QAAQ;MAACM,KAAK,EAAEC,MAAM,CAACqB,YAAa;MAAAd,QAAA,EAAC;IAAc;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAGxE7C,qBAAqB,iBAAI1C,OAAA,CAACL,iBAAiB;MAAC6G,OAAO,EAAEA,CAAA,KAAM7D,wBAAwB,CAAC,KAAK;IAAE;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9F3C,gBAAgB,iBAAI5C,OAAA,CAACJ,YAAY;MAAC4G,OAAO,EAAEA,CAAA,KAAM3D,mBAAmB,CAAC,KAAK;IAAE;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC/EzC,UAAU,iBAAI9C,OAAA,CAACH,eAAe;MAAC2G,OAAO,EAAEA,CAAA,KAAMzD,aAAa,CAAC,KAAK;IAAE;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEf,CAAC;AAACpF,EAAA,CAvNIF,aAAa;AAAAwG,EAAA,GAAbxG,aAAa;AAyNnB,MAAMiF,MAAM,GAAG;EACXiB,aAAa,EAAE;IACXO,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,QAAQ,EAAE,OAAO;IACjBC,OAAO,EAAE,MAAM;IACfC,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,KAAK;IACnBC,SAAS,EAAE;EACf,CAAC;EACDZ,KAAK,EAAE;IACHa,YAAY,EAAE,QAAQ;IACtBC,UAAU,EAAE;EAChB,CAAC;EACD/B,UAAU,EAAE;IACR8B,YAAY,EAAE,MAAM;IACpBJ,OAAO,EAAE,QAAQ;IACjBM,KAAK,EAAE,MAAM;IACbJ,YAAY,EAAE,KAAK;IACnBD,MAAM,EAAE;EACZ,CAAC;EACDtB,WAAW,EAAE;IACTyB,YAAY,EAAE,MAAM;IACpBJ,OAAO,EAAE,QAAQ;IACjBM,KAAK,EAAE,MAAM;IACbJ,YAAY,EAAE,KAAK;IACnBD,MAAM,EAAE;EACZ,CAAC;EACDP,YAAY,EAAE;IACVa,SAAS,EAAE,MAAM;IACjBP,OAAO,EAAE,aAAa;IACtBQ,eAAe,EAAE,SAAS;IAC1BC,KAAK,EAAE,MAAM;IACbR,MAAM,EAAE,MAAM;IACdC,YAAY,EAAE,KAAK;IACnBQ,MAAM,EAAE;EACZ,CAAC;EACDjB,oBAAoB,EAAE;IAClBW,YAAY,EAAE;EAClB;AACJ,CAAC;AAED,eAAehH,aAAa;AAAC,IAAAwG,EAAA;AAAAe,YAAA,CAAAf,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}