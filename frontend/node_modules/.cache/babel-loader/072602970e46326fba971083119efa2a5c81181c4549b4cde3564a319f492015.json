{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\Desktop\\\\bjj-companion\\\\frontend\\\\src\\\\components\\\\TechniqueTypeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TechniqueTypeForm = ({\n  addTechniqueType\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!name) {\n      alert('El campo de nombre es requerido');\n      return;\n    }\n    const newTechniqueType = {\n      name,\n      description\n    };\n    try {\n      await addTechniqueType(newTechniqueType);\n      setName('');\n      setDescription('');\n    } catch (error) {\n      console.error('Error creando tipo de técnica:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Nombre del Tipo de T\\xE9cnica:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Descripci\\xF3n (opcional):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Agregar Tipo de T\\xE9cnica\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(TechniqueTypeForm, \"mnwQBeDFN/kGzccNxCLcYLb7zpM=\");\n_c = TechniqueTypeForm;\nexport default TechniqueTypeForm;\nvar _c;\n$RefreshReg$(_c, \"TechniqueTypeForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TechniqueTypeForm","addTechniqueType","_s","name","setName","description","setDescription","handleSubmit","e","preventDefault","alert","newTechniqueType","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/alber/Desktop/bjj-companion/frontend/src/components/TechniqueTypeForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TechniqueTypeForm = ({ addTechniqueType }) => {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!name) {\r\n            alert('El campo de nombre es requerido');\r\n            return;\r\n        }\r\n\r\n        const newTechniqueType = { name, description };\r\n\r\n        try {\r\n            await addTechniqueType(newTechniqueType);\r\n            setName('');\r\n            setDescription('');\r\n        } catch (error) {\r\n            console.error('Error creando tipo de técnica:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label>Nombre del Tipo de Técnica:</label>\r\n            <input\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                required\r\n            />\r\n\r\n            <label>Descripción (opcional):</label>\r\n            <textarea\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n\r\n            <button type=\"submit\">Agregar Tipo de Técnica</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default TechniqueTypeForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,IAAI,EAAE;MACPO,KAAK,CAAC,iCAAiC,CAAC;MACxC;IACJ;IAEA,MAAMC,gBAAgB,GAAG;MAAER,IAAI;MAAEE;IAAY,CAAC;IAE9C,IAAI;MACA,MAAMJ,gBAAgB,CAACU,gBAAgB,CAAC;MACxCP,OAAO,CAAC,EAAE,CAAC;MACXE,cAAc,CAAC,EAAE,CAAC;IACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IAC1D;EACJ,CAAC;EAED,oBACIb,OAAA;IAAMe,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBACzBhB,OAAA;MAAAgB,QAAA,EAAO;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1CpB,OAAA;MACIqB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAElB,IAAK;MACZmB,QAAQ,EAAGd,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;MACzCG,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eAEFpB,OAAA;MAAAgB,QAAA,EAAO;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACtCpB,OAAA;MACIsB,KAAK,EAAEhB,WAAY;MACnBiB,QAAQ,EAAGd,CAAC,IAAKF,cAAc,CAACE,CAAC,CAACe,MAAM,CAACF,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eAEFpB,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEf,CAAC;AAACjB,EAAA,CAzCIF,iBAAiB;AAAAyB,EAAA,GAAjBzB,iBAAiB;AA2CvB,eAAeA,iBAAiB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}