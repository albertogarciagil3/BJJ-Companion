{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\Desktop\\\\bjj-companion\\\\frontend\\\\src\\\\components\\\\TechniqueTable.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { useReactTable, getCoreRowModel } from '@tanstack/react-table';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TechniqueTable = ({\n  techniques,\n  updateTechnique,\n  deleteTechnique\n}) => {\n  _s();\n  const columns = useMemo(() => [{\n    accessorKey: 'name',\n    header: 'Nombre'\n  }, {\n    accessorKey: 'techniqueType',\n    header: 'Tipo',\n    cell: ({\n      getValue\n    }) => getValue().join(', ')\n  }, {\n    accessorKey: 'positionStart',\n    header: 'Posici贸n Inicial'\n  }, {\n    accessorKey: 'endPosition',\n    header: 'Posici贸n Final'\n  }, {\n    accessorKey: 'proficiencyLevel',\n    header: 'Proficiency Level'\n  }, {\n    accessorKey: 'giNoGi',\n    header: 'Gi/No Gi'\n  }, {\n    header: 'Acciones',\n    cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit(row.original),\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTechnique(row.original._id),\n        style: styles.deleteButton,\n        children: \"Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }], []);\n  const table = useReactTable({\n    data: techniques,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n  const {\n    getHeaderGroups,\n    getRowModel\n  } = table;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: styles.table,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: header.renderHeader()\n        }, header.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this))\n      }, headerGroup.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: cell.renderCell()\n        }, cell.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this))\n      }, row.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(TechniqueTable, \"4hPNPOVD6NmFgooi8etqClAnRtQ=\", false, function () {\n  return [useReactTable];\n});\n_c = TechniqueTable;\nconst styles = {\n  table: {\n    width: '100%',\n    borderCollapse: 'collapse'\n  },\n  deleteButton: {\n    color: 'red'\n  }\n};\nexport default TechniqueTable;\nvar _c;\n$RefreshReg$(_c, \"TechniqueTable\");","map":{"version":3,"names":["React","useMemo","useReactTable","getCoreRowModel","jsxDEV","_jsxDEV","Fragment","_Fragment","TechniqueTable","techniques","updateTechnique","deleteTechnique","_s","columns","accessorKey","header","cell","getValue","join","row","children","onClick","handleEdit","original","fileName","_jsxFileName","lineNumber","columnNumber","_id","style","styles","deleteButton","table","data","getHeaderGroups","getRowModel","map","headerGroup","headers","renderHeader","id","rows","getVisibleCells","renderCell","_c","width","borderCollapse","color","$RefreshReg$"],"sources":["C:/Users/alber/Desktop/bjj-companion/frontend/src/components/TechniqueTable.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { useReactTable, getCoreRowModel } from '@tanstack/react-table';\r\n\r\nconst TechniqueTable = ({ techniques, updateTechnique, deleteTechnique }) => {\r\n    const columns = useMemo(() => [\r\n        { accessorKey: 'name', header: 'Nombre' },\r\n        {\r\n            accessorKey: 'techniqueType',\r\n            header: 'Tipo',\r\n            cell: ({ getValue }) => getValue().join(', ')\r\n        },\r\n        { accessorKey: 'positionStart', header: 'Posici贸n Inicial' },\r\n        { accessorKey: 'endPosition', header: 'Posici贸n Final' },\r\n        { accessorKey: 'proficiencyLevel', header: 'Proficiency Level' },\r\n        { accessorKey: 'giNoGi', header: 'Gi/No Gi' },\r\n        {\r\n            header: 'Acciones',\r\n            cell: ({ row }) => (\r\n                <>\r\n                    <button onClick={() => handleEdit(row.original)}>Editar</button>\r\n                    <button onClick={() => deleteTechnique(row.original._id)} style={styles.deleteButton}>\r\n                        Eliminar\r\n                    </button>\r\n                </>\r\n            ),\r\n        },\r\n    ], []);\r\n\r\n    const table = useReactTable({\r\n        data: techniques,\r\n        columns,\r\n        getCoreRowModel: getCoreRowModel(),\r\n    });\r\n\r\n    const { getHeaderGroups, getRowModel } = table;\r\n\r\n    return (\r\n        <table style={styles.table}>\r\n            <thead>\r\n                {getHeaderGroups().map((headerGroup) => (\r\n                    <tr key={headerGroup.id}>\r\n                        {headerGroup.headers.map((header) => (\r\n                            <th key={header.id}>{header.renderHeader()}</th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody>\r\n                {getRowModel().rows.map((row) => (\r\n                    <tr key={row.id}>\r\n                        {row.getVisibleCells().map((cell) => (\r\n                            <td key={cell.id}>{cell.renderCell()}</td>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    table: {\r\n        width: '100%',\r\n        borderCollapse: 'collapse',\r\n    },\r\n    deleteButton: {\r\n        color: 'red',\r\n    },\r\n};\r\n\r\nexport default TechniqueTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}