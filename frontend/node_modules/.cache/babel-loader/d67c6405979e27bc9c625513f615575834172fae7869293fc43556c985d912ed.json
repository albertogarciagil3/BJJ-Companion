{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\Desktop\\\\bjj-companion\\\\frontend\\\\src\\\\components\\\\DualityForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DualityForm = ({\n  addDuality\n}) => {\n  _s();\n  const [element1, setElement1] = useState('');\n  const [element2, setElement2] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!element1 || !element2) {\n      alert('Ambos elementos son requeridos');\n      return;\n    }\n\n    // Concatenar los elementos para generar el nombre\n    const name = `${element1}/${element2}`;\n    const newDuality = {\n      name,\n      element1,\n      element2\n    };\n    try {\n      // Aquí intentamos enviar los datos al servidor mediante `addDuality`\n      await addDuality(newDuality);\n      setElement1('');\n      setElement2('');\n    } catch (error) {\n      console.error('Error creando dualidad:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Elemento 1:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: element1,\n      onChange: e => setElement1(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Elemento 2:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: element2,\n      onChange: e => setElement2(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Agregar Dualidad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(DualityForm, \"/V4R/rIYs1LR+zEeE47Ry1/qXSs=\");\n_c = DualityForm;\nexport default DualityForm;\nvar _c;\n$RefreshReg$(_c, \"DualityForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DualityForm","addDuality","_s","element1","setElement1","element2","setElement2","handleSubmit","e","preventDefault","alert","name","newDuality","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/alber/Desktop/bjj-companion/frontend/src/components/DualityForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst DualityForm = ({ addDuality }) => {\r\n    const [element1, setElement1] = useState('');\r\n    const [element2, setElement2] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!element1 || !element2) {\r\n            alert('Ambos elementos son requeridos');\r\n            return;\r\n        }\r\n\r\n        // Concatenar los elementos para generar el nombre\r\n        const name = `${element1}/${element2}`;\r\n        const newDuality = { name, element1, element2 };\r\n\r\n        try {\r\n            // Aquí intentamos enviar los datos al servidor mediante `addDuality`\r\n            await addDuality(newDuality);\r\n            setElement1('');\r\n            setElement2('');\r\n        } catch (error) {\r\n            console.error('Error creando dualidad:', error);\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label>Elemento 1:</label>\r\n            <input\r\n                type=\"text\"\r\n                value={element1}\r\n                onChange={(e) => setElement1(e.target.value)}\r\n            />\r\n\r\n            <label>Elemento 2:</label>\r\n            <input\r\n                type=\"text\"\r\n                value={element2}\r\n                onChange={(e) => setElement2(e.target.value)}\r\n            />\r\n\r\n            <button type=\"submit\">Agregar Dualidad</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default DualityForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,QAAQ,IAAI,CAACE,QAAQ,EAAE;MACxBK,KAAK,CAAC,gCAAgC,CAAC;MACvC;IACJ;;IAEA;IACA,MAAMC,IAAI,GAAG,GAAGR,QAAQ,IAAIE,QAAQ,EAAE;IACtC,MAAMO,UAAU,GAAG;MAAED,IAAI;MAAER,QAAQ;MAAEE;IAAS,CAAC;IAE/C,IAAI;MACA;MACA,MAAMJ,UAAU,CAACW,UAAU,CAAC;MAC5BR,WAAW,CAAC,EAAE,CAAC;MACfE,WAAW,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;EAID,oBACId,OAAA;IAAMgB,QAAQ,EAAER,YAAa;IAAAS,QAAA,gBACzBjB,OAAA;MAAAiB,QAAA,EAAO;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1BrB,OAAA;MACIsB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEnB,QAAS;MAChBoB,QAAQ,EAAGf,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACgB,MAAM,CAACF,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eAEFrB,OAAA;MAAAiB,QAAA,EAAO;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1BrB,OAAA;MACIsB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEjB,QAAS;MAChBkB,QAAQ,EAAGf,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACgB,MAAM,CAACF,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eAEFrB,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEf,CAAC;AAAClB,EAAA,CA9CIF,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAgDjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}