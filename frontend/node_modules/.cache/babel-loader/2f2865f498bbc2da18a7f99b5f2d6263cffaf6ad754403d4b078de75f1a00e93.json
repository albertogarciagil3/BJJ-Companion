{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\Desktop\\\\bjj-companion\\\\frontend\\\\src\\\\components\\\\TechniqueForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TechniqueTypeForm from './TechniqueTypeForm'; // Formulario modular para agregar un nuevo tipo de técnica\nimport PositionForm from './PositionForm'; // Formulario modular para crear una nueva posición\nimport IfEscenarioForm from './IfEscenarioForm'; // Formulario modular para crear un nuevo IF\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TechniqueForm = ({\n  addTechnique\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [techniqueType, setTechniqueType] = useState('');\n  const [positionStart, setPositionStart] = useState('');\n  const [temporalPositions, setTemporalPositions] = useState([]);\n  const [endPosition, setEndPosition] = useState('');\n  const [ifScenarios, setIfScenarios] = useState('');\n  const [media, setMedia] = useState('');\n  const [externalLinks, setExternalLinks] = useState('');\n  const [relatedPositions, setRelatedPositions] = useState([]);\n  const [relatedTechniques, setRelatedTechniques] = useState('');\n  const [proficiencyLevel, setProficiencyLevel] = useState(1);\n  const [giNoGi, setGiNoGi] = useState('both');\n  const [practiceToday, setPracticeToday] = useState(false);\n  const [positionsList, setPositionsList] = useState([]);\n  const [techniquesList, setTechniquesList] = useState([]);\n  const [techniqueTypesList, setTechniqueTypesList] = useState([]);\n  const [ifsList, setIfsList] = useState([]);\n  const [customFields, setCustomFields] = useState([]);\n  const [customFieldValues, setCustomFieldValues] = useState({});\n  const [showTechniqueTypeForm, setShowTechniqueTypeForm] = useState(false);\n  const [showPositionForm, setShowPositionForm] = useState(false);\n  const [showIfForm, setShowIfForm] = useState(false);\n  const [showCustomFields, setShowCustomFields] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [positionsResponse, techniquesResponse, typesResponse, ifsResponse, customFieldsResponse] = await Promise.all([axios.get('http://localhost:5000/positions'), axios.get('http://localhost:5000/techniques'), axios.get('http://localhost:5000/techniquetypes'), axios.get('http://localhost:5000/ifescenarios'), axios.get('http://localhost:5000/custom-fields')]);\n        setPositionsList(positionsResponse.data);\n        setTechniquesList(techniquesResponse.data);\n        setTechniqueTypesList(typesResponse.data);\n        setIfsList(ifsResponse.data);\n        setCustomFields(customFieldsResponse.data);\n      } catch (error) {\n        console.error('Error al obtener datos:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAddTemporalPosition = () => {\n    setTemporalPositions([...temporalPositions, '']);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const techniqueData = {\n      name,\n      techniqueType,\n      positionStart,\n      temporalPositions,\n      endPosition,\n      ifScenarios,\n      media: media.split(',').map(m => m.trim()),\n      externalLinks: externalLinks.split(',').map(link => link.trim()),\n      relatedPositions,\n      relatedTechniques,\n      proficiencyLevel,\n      giNoGi,\n      practiceToday,\n      customFields: customFieldValues\n    };\n    addTechnique(techniqueData).then(() => {\n      setName('');\n      setTechniqueType('');\n      setPositionStart('');\n      setTemporalPositions([]);\n      setEndPosition('');\n      setIfScenarios('');\n      setMedia('');\n      setExternalLinks('');\n      setRelatedPositions([]);\n      setRelatedTechniques('');\n      setProficiencyLevel(1);\n      setGiNoGi('both');\n      setPracticeToday(false);\n      setCustomFieldValues({});\n    }).catch(error => {\n      console.error('Error al agregar la técnica:', error);\n    });\n  };\n  const renderCustomFieldInput = field => {\n    const handleChange = value => {\n      setCustomFieldValues(prev => ({\n        ...prev,\n        [field._id]: value\n      }));\n    };\n    switch (field.type) {\n      case 'Text':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: customFieldValues[field._id] || '',\n          onChange: e => handleChange(e.target.value),\n          style: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this);\n      case 'Number':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: customFieldValues[field._id] || '',\n          onChange: e => handleChange(e.target.value),\n          style: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this);\n      case 'Checklist':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: customFieldValues[field._id] || false,\n          onChange: e => handleChange(e.target.checked),\n          style: styles.checkbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this);\n      case 'Select':\n      case 'Multiselect':\n        return /*#__PURE__*/_jsxDEV(\"select\", {\n          multiple: field.type === 'Multiselect',\n          value: customFieldValues[field._id] || [],\n          onChange: e => handleChange(Array.from(e.target.selectedOptions, option => option.value)),\n          style: styles.selectField,\n          children: field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option,\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this);\n      case 'Date':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: customFieldValues[field._id] || '',\n          onChange: e => handleChange(e.target.value),\n          style: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this);\n      case 'Hyperlink':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          value: customFieldValues[field._id] || '',\n          onChange: e => handleChange(e.target.value),\n          style: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this);\n      case 'Multimedia':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: e => handleChange(Array.from(e.target.files)),\n          style: styles.fileInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: styles.formContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      style: styles.label,\n      children: \"Nombre de la T\\xE9cnica:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      required: true,\n      style: styles.inputField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: styles.label,\n      children: \"Campos Personalizados:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => setShowCustomFields(!showCustomFields),\n      style: styles.toggleButton,\n      children: showCustomFields ? 'Ocultar Campos Personalizados' : 'Mostrar Campos Personalizados'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), showCustomFields && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.customFieldsContainer,\n      children: customFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.customField,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: [field.name, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 29\n        }, this), renderCustomFieldInput(field)]\n      }, field._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      style: styles.submitButton,\n      children: \"A\\xF1adir T\\xE9cnica\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this), showTechniqueTypeForm && /*#__PURE__*/_jsxDEV(TechniqueTypeForm, {\n      onClose: () => setShowTechniqueTypeForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 39\n    }, this), showPositionForm && /*#__PURE__*/_jsxDEV(PositionForm, {\n      onClose: () => setShowPositionForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 34\n    }, this), showIfForm && /*#__PURE__*/_jsxDEV(IfEscenarioForm, {\n      onClose: () => setShowIfForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n};\n_s(TechniqueForm, \"VlfGEHPFjVy1XSZhuPFpGHS57Kc=\");\n_c = TechniqueForm;\nconst styles = {\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxWidth: '500px',\n    padding: '1rem',\n    border: '1px solid #ddd',\n    borderRadius: '8px',\n    boxShadow: '0 0 10px rgba(0,0,0,0.1)'\n  },\n  label: {\n    marginBottom: '0.3rem',\n    fontWeight: 'bold'\n  },\n  inputField: {\n    marginBottom: '1rem',\n    padding: '0.5rem',\n    width: '100%',\n    borderRadius: '4px',\n    border: '1px solid #ddd'\n  },\n  selectField: {\n    marginBottom: '1rem',\n    padding: '0.5rem',\n    width: '100%',\n    borderRadius: '4px',\n    border: '1px solid #ddd'\n  },\n  checkbox: {\n    marginBottom: '1rem'\n  },\n  toggleButton: {\n    marginBottom: '1rem',\n    padding: '0.5rem',\n    backgroundColor: '#007BFF',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer'\n  },\n  customFieldsContainer: {\n    border: '1px solid #ddd',\n    padding: '1rem',\n    borderRadius: '4px',\n    marginBottom: '1rem'\n  },\n  fileInput: {\n    marginBottom: '1rem'\n  },\n  submitButton: {\n    padding: '0.5rem 1rem',\n    backgroundColor: '#4CAF50',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer'\n  }\n};\nexport default TechniqueForm;\nvar _c;\n$RefreshReg$(_c, \"TechniqueForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","TechniqueTypeForm","PositionForm","IfEscenarioForm","jsxDEV","_jsxDEV","TechniqueForm","addTechnique","_s","name","setName","techniqueType","setTechniqueType","positionStart","setPositionStart","temporalPositions","setTemporalPositions","endPosition","setEndPosition","ifScenarios","setIfScenarios","media","setMedia","externalLinks","setExternalLinks","relatedPositions","setRelatedPositions","relatedTechniques","setRelatedTechniques","proficiencyLevel","setProficiencyLevel","giNoGi","setGiNoGi","practiceToday","setPracticeToday","positionsList","setPositionsList","techniquesList","setTechniquesList","techniqueTypesList","setTechniqueTypesList","ifsList","setIfsList","customFields","setCustomFields","customFieldValues","setCustomFieldValues","showTechniqueTypeForm","setShowTechniqueTypeForm","showPositionForm","setShowPositionForm","showIfForm","setShowIfForm","showCustomFields","setShowCustomFields","fetchData","positionsResponse","techniquesResponse","typesResponse","ifsResponse","customFieldsResponse","Promise","all","get","data","error","console","handleAddTemporalPosition","handleSubmit","e","preventDefault","techniqueData","split","map","m","trim","link","then","catch","renderCustomFieldInput","field","handleChange","value","prev","_id","type","onChange","target","style","styles","inputField","fileName","_jsxFileName","lineNumber","columnNumber","checked","checkbox","multiple","Array","from","selectedOptions","option","selectField","children","options","files","fileInput","onSubmit","formContainer","label","required","onClick","toggleButton","customFieldsContainer","customField","submitButton","onClose","_c","display","flexDirection","maxWidth","padding","border","borderRadius","boxShadow","marginBottom","fontWeight","width","backgroundColor","color","cursor","$RefreshReg$"],"sources":["C:/Users/alber/Desktop/bjj-companion/frontend/src/components/TechniqueForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport TechniqueTypeForm from './TechniqueTypeForm'; // Formulario modular para agregar un nuevo tipo de técnica\r\nimport PositionForm from './PositionForm'; // Formulario modular para crear una nueva posición\r\nimport IfEscenarioForm from './IfEscenarioForm'; // Formulario modular para crear un nuevo IF\r\n\r\nconst TechniqueForm = ({ addTechnique }) => {\r\n    const [name, setName] = useState('');\r\n    const [techniqueType, setTechniqueType] = useState('');\r\n    const [positionStart, setPositionStart] = useState('');\r\n    const [temporalPositions, setTemporalPositions] = useState([]);\r\n    const [endPosition, setEndPosition] = useState('');\r\n    const [ifScenarios, setIfScenarios] = useState('');\r\n    const [media, setMedia] = useState('');\r\n    const [externalLinks, setExternalLinks] = useState('');\r\n    const [relatedPositions, setRelatedPositions] = useState([]);\r\n    const [relatedTechniques, setRelatedTechniques] = useState('');\r\n    const [proficiencyLevel, setProficiencyLevel] = useState(1);\r\n    const [giNoGi, setGiNoGi] = useState('both');\r\n    const [practiceToday, setPracticeToday] = useState(false);\r\n    const [positionsList, setPositionsList] = useState([]);\r\n    const [techniquesList, setTechniquesList] = useState([]);\r\n    const [techniqueTypesList, setTechniqueTypesList] = useState([]);\r\n    const [ifsList, setIfsList] = useState([]);\r\n    const [customFields, setCustomFields] = useState([]);\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n    const [showTechniqueTypeForm, setShowTechniqueTypeForm] = useState(false);\r\n    const [showPositionForm, setShowPositionForm] = useState(false);\r\n    const [showIfForm, setShowIfForm] = useState(false);\r\n    const [showCustomFields, setShowCustomFields] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const [\r\n                    positionsResponse,\r\n                    techniquesResponse,\r\n                    typesResponse,\r\n                    ifsResponse,\r\n                    customFieldsResponse\r\n                ] = await Promise.all([\r\n                    axios.get('http://localhost:5000/positions'),\r\n                    axios.get('http://localhost:5000/techniques'),\r\n                    axios.get('http://localhost:5000/techniquetypes'),\r\n                    axios.get('http://localhost:5000/ifescenarios'),\r\n                    axios.get('http://localhost:5000/custom-fields')\r\n                ]);\r\n                setPositionsList(positionsResponse.data);\r\n                setTechniquesList(techniquesResponse.data);\r\n                setTechniqueTypesList(typesResponse.data);\r\n                setIfsList(ifsResponse.data);\r\n                setCustomFields(customFieldsResponse.data);\r\n            } catch (error) {\r\n                console.error('Error al obtener datos:', error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleAddTemporalPosition = () => {\r\n        setTemporalPositions([...temporalPositions, '']);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const techniqueData = {\r\n            name,\r\n            techniqueType,\r\n            positionStart,\r\n            temporalPositions,\r\n            endPosition,\r\n            ifScenarios,\r\n            media: media.split(',').map((m) => m.trim()),\r\n            externalLinks: externalLinks.split(',').map((link) => link.trim()),\r\n            relatedPositions,\r\n            relatedTechniques,\r\n            proficiencyLevel,\r\n            giNoGi,\r\n            practiceToday,\r\n            customFields: customFieldValues,\r\n        };\r\n        addTechnique(techniqueData)\r\n            .then(() => {\r\n                setName('');\r\n                setTechniqueType('');\r\n                setPositionStart('');\r\n                setTemporalPositions([]);\r\n                setEndPosition('');\r\n                setIfScenarios('');\r\n                setMedia('');\r\n                setExternalLinks('');\r\n                setRelatedPositions([]);\r\n                setRelatedTechniques('');\r\n                setProficiencyLevel(1);\r\n                setGiNoGi('both');\r\n                setPracticeToday(false);\r\n                setCustomFieldValues({});\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error al agregar la técnica:', error);\r\n            });\r\n    };\r\n\r\n    const renderCustomFieldInput = (field) => {\r\n        const handleChange = (value) => {\r\n            setCustomFieldValues((prev) => ({\r\n                ...prev,\r\n                [field._id]: value,\r\n            }));\r\n        };\r\n\r\n        switch (field.type) {\r\n            case 'Text':\r\n                return (\r\n                    <input\r\n                        type=\"text\"\r\n                        value={customFieldValues[field._id] || ''}\r\n                        onChange={(e) => handleChange(e.target.value)}\r\n                        style={styles.inputField}\r\n                    />\r\n                );\r\n            case 'Number':\r\n                return (\r\n                    <input\r\n                        type=\"number\"\r\n                        value={customFieldValues[field._id] || ''}\r\n                        onChange={(e) => handleChange(e.target.value)}\r\n                        style={styles.inputField}\r\n                    />\r\n                );\r\n            case 'Checklist':\r\n                return (\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={customFieldValues[field._id] || false}\r\n                        onChange={(e) => handleChange(e.target.checked)}\r\n                        style={styles.checkbox}\r\n                    />\r\n                );\r\n            case 'Select':\r\n            case 'Multiselect':\r\n                return (\r\n                    <select\r\n                        multiple={field.type === 'Multiselect'}\r\n                        value={customFieldValues[field._id] || []}\r\n                        onChange={(e) =>\r\n                            handleChange(Array.from(e.target.selectedOptions, (option) => option.value))\r\n                        }\r\n                        style={styles.selectField}\r\n                    >\r\n                        {field.options.map((option) => (\r\n                            <option key={option} value={option}>\r\n                                {option}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                );\r\n            case 'Date':\r\n                return (\r\n                    <input\r\n                        type=\"date\"\r\n                        value={customFieldValues[field._id] || ''}\r\n                        onChange={(e) => handleChange(e.target.value)}\r\n                        style={styles.inputField}\r\n                    />\r\n                );\r\n            case 'Hyperlink':\r\n                return (\r\n                    <input\r\n                        type=\"url\"\r\n                        value={customFieldValues[field._id] || ''}\r\n                        onChange={(e) => handleChange(e.target.value)}\r\n                        style={styles.inputField}\r\n                    />\r\n                );\r\n            case 'Multimedia':\r\n                return (\r\n                    <input\r\n                        type=\"file\"\r\n                        multiple\r\n                        onChange={(e) => handleChange(Array.from(e.target.files))}\r\n                        style={styles.fileInput}\r\n                    />\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} style={styles.formContainer}>\r\n            {/* Campos básicos de técnica */}\r\n            <label style={styles.label}>Nombre de la Técnica:</label>\r\n            <input\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                required\r\n                style={styles.inputField}\r\n            />\r\n            {/* (otros campos del formulario como antes, omitiendo para brevedad) */}\r\n\r\n            <label style={styles.label}>Campos Personalizados:</label>\r\n            <button type=\"button\" onClick={() => setShowCustomFields(!showCustomFields)} style={styles.toggleButton}>\r\n                {showCustomFields ? 'Ocultar Campos Personalizados' : 'Mostrar Campos Personalizados'}\r\n            </button>\r\n            {showCustomFields && (\r\n                <div style={styles.customFieldsContainer}>\r\n                    {customFields.map((field) => (\r\n                        <div key={field._id} style={styles.customField}>\r\n                            <label style={styles.label}>{field.name}:</label>\r\n                            {renderCustomFieldInput(field)}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n            <button type=\"submit\" style={styles.submitButton}>Añadir Técnica</button>\r\n\r\n            {showTechniqueTypeForm && <TechniqueTypeForm onClose={() => setShowTechniqueTypeForm(false)} />}\r\n            {showPositionForm && <PositionForm onClose={() => setShowPositionForm(false)} />}\r\n            {showIfForm && <IfEscenarioForm onClose={() => setShowIfForm(false)} />}\r\n        </form>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        maxWidth: '500px',\r\n        padding: '1rem',\r\n        border: '1px solid #ddd',\r\n        borderRadius: '8px',\r\n        boxShadow: '0 0 10px rgba(0,0,0,0.1)',\r\n    },\r\n    label: {\r\n        marginBottom: '0.3rem',\r\n        fontWeight: 'bold',\r\n    },\r\n    inputField: {\r\n        marginBottom: '1rem',\r\n        padding: '0.5rem',\r\n        width: '100%',\r\n        borderRadius: '4px',\r\n        border: '1px solid #ddd',\r\n    },\r\n    selectField: {\r\n        marginBottom: '1rem',\r\n        padding: '0.5rem',\r\n        width: '100%',\r\n        borderRadius: '4px',\r\n        border: '1px solid #ddd',\r\n    },\r\n    checkbox: {\r\n        marginBottom: '1rem',\r\n    },\r\n    toggleButton: {\r\n        marginBottom: '1rem',\r\n        padding: '0.5rem',\r\n        backgroundColor: '#007BFF',\r\n        color: '#fff',\r\n        border: 'none',\r\n        borderRadius: '4px',\r\n        cursor: 'pointer',\r\n    },\r\n    customFieldsContainer: {\r\n        border: '1px solid #ddd',\r\n        padding: '1rem',\r\n        borderRadius: '4px',\r\n        marginBottom: '1rem',\r\n    },\r\n    fileInput: {\r\n        marginBottom: '1rem',\r\n    },\r\n    submitButton: {\r\n        padding: '0.5rem 1rem',\r\n        backgroundColor: '#4CAF50',\r\n        color: '#fff',\r\n        border: 'none',\r\n        borderRadius: '4px',\r\n        cursor: 'pointer',\r\n    },\r\n};\r\n\r\nexport default TechniqueForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}