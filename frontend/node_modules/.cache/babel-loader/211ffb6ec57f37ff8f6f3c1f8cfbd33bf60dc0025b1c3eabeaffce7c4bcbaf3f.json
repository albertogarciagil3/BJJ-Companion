{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\Desktop\\\\bjj-companion\\\\frontend\\\\src\\\\components\\\\TechniqueTable.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { useReactTable, getCoreRowModel, flexRender } from '@tanstack/react-table';\nimport { getPositions, getTechniqueTypes, addCustomField, deleteCustomField, getTechniques, deleteTechnique } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TechniqueTable = ({\n  updateTechnique\n}) => {\n  _s();\n  const [techniquesState, setTechniquesState] = useState([]);\n  const [positions, setPositions] = useState([]);\n  const [techniqueTypes, setTechniqueTypes] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [showDeleteTechniqueModal, setShowDeleteTechniqueModal] = useState(false);\n  const [newFieldType, setNewFieldType] = useState('');\n  const [newFieldName, setNewFieldName] = useState('');\n  const [fieldToDelete, setFieldToDelete] = useState(null);\n  const [techniqueToDelete, setTechniqueToDelete] = useState(null);\n  useEffect(() => {\n    const fetchTechniques = async () => {\n      try {\n        const data = await getTechniques();\n        setTechniquesState(data);\n      } catch (error) {\n        console.error('Error al obtener técnicas:', error);\n      }\n    };\n    const fetchPositions = async () => {\n      try {\n        const data = await getPositions();\n        setPositions(data);\n      } catch (error) {\n        console.error('Error al obtener posiciones:', error);\n      }\n    };\n    const fetchTechniqueTypes = async () => {\n      try {\n        const data = await getTechniqueTypes();\n        setTechniqueTypes(data);\n      } catch (error) {\n        console.error('Error al obtener tipos de técnica:', error);\n      }\n    };\n    fetchTechniques();\n    fetchPositions();\n    fetchTechniqueTypes();\n  }, []);\n  const getPositionName = id => {\n    const position = positions.find(pos => pos._id === id);\n    return position ? position.name : 'Sin posición';\n  };\n  const getTechniqueTypeName = idArray => {\n    const names = idArray.map(id => {\n      const type = techniqueTypes.find(t => t._id === id);\n      return type ? type.name : 'Sin tipo';\n    }).join(', ');\n    return names;\n  };\n  const columns = useMemo(() => {\n    const baseColumns = [{\n      id: 'name',\n      accessorKey: 'name',\n      header: 'Nombre'\n    }, {\n      id: 'techniqueType',\n      accessorKey: 'techniqueType',\n      header: 'Tipo',\n      cell: ({\n        getValue\n      }) => getTechniqueTypeName(getValue())\n    }, {\n      id: 'positionStart',\n      accessorKey: 'positionStart',\n      header: 'Posición Inicial',\n      cell: ({\n        getValue\n      }) => getPositionName(getValue())\n    }, {\n      id: 'endPosition',\n      accessorKey: 'endPosition',\n      header: 'Posición Final',\n      cell: ({\n        getValue\n      }) => getPositionName(getValue())\n    }, {\n      id: 'proficiencyLevel',\n      accessorKey: 'proficiencyLevel',\n      header: 'Proficiency Level'\n    }, {\n      id: 'giNoGi',\n      accessorKey: 'giNoGi',\n      header: 'Gi/No Gi'\n    }, {\n      id: 'actions',\n      header: 'Acciones',\n      cell: ({\n        row\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTechniqueClick(row.original._id),\n          style: styles.deleteButton,\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)\n    }];\n    const customFieldColumns = [];\n    if (techniquesState.length > 0 && Array.isArray(techniquesState[0].customFields)) {\n      techniquesState[0].customFields.forEach(customField => {\n        // Verifica que customField y sus propiedades existen\n        if (customField && customField.field && customField.field._id) {\n          customFieldColumns.push({\n            id: customField.field._id,\n            accessorKey: `customFields.${customField.field._id}`,\n            header: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [customField.field.name, /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteFieldClick(customField.field._id),\n                style: styles.deleteFieldButton,\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this),\n            cell: ({\n              getValue\n            }) => getValue() || 'N/A'\n          });\n        }\n      });\n    }\n    return [...baseColumns, ...customFieldColumns, {\n      id: 'addNewField',\n      header: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(true),\n        style: styles.addNewFieldButton,\n        children: \"Add New Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this),\n      cell: () => null\n    }];\n  }, [positions, techniqueTypes, techniquesState]);\n  const table = useReactTable({\n    data: techniquesState,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n  const handleAddNewField = async () => {\n    try {\n      await addCustomField(newFieldName, newFieldType);\n      setShowModal(false);\n      setNewFieldName('');\n      setNewFieldType('');\n      const updatedTechniques = await getTechniques();\n      setTechniquesState(updatedTechniques);\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        console.error('Error al agregar campo personalizado: Este nombre ya existe.');\n        alert('El nombre del campo personalizado ya existe. Por favor elige otro.');\n      } else {\n        console.error('Error al agregar nuevo campo:', error);\n      }\n    }\n  };\n  const handleDeleteFieldClick = field => {\n    setFieldToDelete(field);\n    setShowDeleteModal(true);\n  };\n  const handleConfirmDeleteField = async () => {\n    if (!fieldToDelete) {\n      console.error(\"Error: fieldToDelete está vacío o no definido.\");\n      return;\n    }\n    try {\n      await deleteCustomField(fieldToDelete);\n      setShowDeleteModal(false);\n      setFieldToDelete(null);\n      const updatedTechniques = await getTechniques();\n      setTechniquesState(updatedTechniques);\n    } catch (error) {\n      console.error('Error al eliminar campo personalizado:', error);\n    }\n  };\n  const handleDeleteTechniqueClick = techniqueId => {\n    setTechniqueToDelete(techniqueId);\n    setShowDeleteTechniqueModal(true);\n  };\n  const handleConfirmDeleteTechnique = async () => {\n    try {\n      await deleteTechnique(techniqueToDelete);\n      setShowDeleteTechniqueModal(false);\n      setTechniqueToDelete(null);\n      setTechniquesState(prevTechniques => prevTechniques.filter(technique => technique._id !== techniqueToDelete));\n    } catch (error) {\n      console.error('Error al eliminar técnica:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Techniques\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            style: styles.cell,\n            children: flexRender(header.column.columnDef.header, header.getContext())\n          }, header.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 33\n          }, this))\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: styles.cell,\n            children: flexRender(cell.column.columnDef.cell, cell.getContext())\n          }, cell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 33\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.modalOverlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.modal,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Agregar nuevo campo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Nombre del campo\",\n          value: newFieldName,\n          onChange: e => setNewFieldName(e.target.value),\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newFieldType,\n          onChange: e => setNewFieldType(e.target.value),\n          style: styles.input,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona el tipo de dato\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Text\",\n            children: \"Texto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Number\",\n            children: \"N\\xFAmero\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Checklist\",\n            children: \"Checklist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Select\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Multiselect\",\n            children: \"Multiselect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Date\",\n            children: \"Fecha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CreationDate\",\n            children: \"Fecha de Creaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CreationTime\",\n            children: \"Hora de Creaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Hyperlink\",\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddNewField,\n          style: styles.saveButton,\n          children: \"Agregar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          style: styles.closeButton,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }, this), showDeleteModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.modalOverlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.modal,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\xBFEliminar el campo \\\"\", fieldToDelete, \"\\\"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirmDeleteField,\n          style: styles.deleteButton,\n          children: \"Confirmar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowDeleteModal(false),\n          style: styles.closeButton,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }, this), showDeleteTechniqueModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.modalOverlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.modal,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\xBFEst\\xE1s seguro de que deseas eliminar esta t\\xE9cnica?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirmDeleteTechnique,\n          style: styles.deleteButton,\n          children: \"Confirmar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowDeleteTechniqueModal(false),\n          style: styles.closeButton,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, this);\n};\n_s(TechniqueTable, \"DXEweNcYHNjr/i9tN7RovWm6Ids=\", false, function () {\n  return [useReactTable];\n});\n_c = TechniqueTable;\nconst styles = {\n  table: {\n    width: '100%',\n    borderCollapse: 'collapse',\n    border: '1px solid black'\n  },\n  cell: {\n    textAlign: 'left',\n    border: '1px solid black',\n    padding: '8px'\n  },\n  deleteButton: {\n    color: 'red'\n  },\n  addNewFieldButton: {\n    color: 'blue'\n  },\n  deleteFieldButton: {\n    background: 'none',\n    border: 'none',\n    color: 'red',\n    cursor: 'pointer'\n  },\n  modalOverlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modal: {\n    backgroundColor: 'white',\n    padding: '2rem',\n    borderRadius: '5px',\n    width: '300px'\n  },\n  input: {\n    width: '100%',\n    marginBottom: '1rem',\n    padding: '0.5rem'\n  },\n  saveButton: {\n    marginRight: '0.5rem'\n  },\n  closeButton: {\n    color: 'red'\n  }\n};\nexport default TechniqueTable;\nvar _c;\n$RefreshReg$(_c, \"TechniqueTable\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","useReactTable","getCoreRowModel","flexRender","getPositions","getTechniqueTypes","addCustomField","deleteCustomField","getTechniques","deleteTechnique","jsxDEV","_jsxDEV","Fragment","_Fragment","TechniqueTable","updateTechnique","_s","techniquesState","setTechniquesState","positions","setPositions","techniqueTypes","setTechniqueTypes","showModal","setShowModal","showDeleteModal","setShowDeleteModal","showDeleteTechniqueModal","setShowDeleteTechniqueModal","newFieldType","setNewFieldType","newFieldName","setNewFieldName","fieldToDelete","setFieldToDelete","techniqueToDelete","setTechniqueToDelete","fetchTechniques","data","error","console","fetchPositions","fetchTechniqueTypes","getPositionName","id","position","find","pos","_id","name","getTechniqueTypeName","idArray","names","map","type","t","join","columns","baseColumns","accessorKey","header","cell","getValue","row","children","onClick","handleDeleteTechniqueClick","original","style","styles","deleteButton","fileName","_jsxFileName","lineNumber","columnNumber","customFieldColumns","length","Array","isArray","customFields","forEach","customField","field","push","handleDeleteFieldClick","deleteFieldButton","addNewFieldButton","table","handleAddNewField","updatedTechniques","response","status","alert","handleConfirmDeleteField","techniqueId","handleConfirmDeleteTechnique","prevTechniques","filter","technique","getHeaderGroups","headerGroup","headers","column","columnDef","getContext","getRowModel","rows","getVisibleCells","modalOverlay","modal","placeholder","value","onChange","e","target","input","saveButton","closeButton","_c","width","borderCollapse","border","textAlign","padding","color","background","cursor","top","left","right","bottom","backgroundColor","display","justifyContent","alignItems","borderRadius","marginBottom","marginRight","$RefreshReg$"],"sources":["C:/Users/alber/Desktop/bjj-companion/frontend/src/components/TechniqueTable.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\r\nimport { useReactTable, getCoreRowModel, flexRender } from '@tanstack/react-table';\r\nimport {\r\n    getPositions,\r\n    getTechniqueTypes,\r\n    addCustomField,\r\n    deleteCustomField,\r\n    getTechniques,\r\n    deleteTechnique\r\n} from '../services/api';\r\n\r\nconst TechniqueTable = ({ updateTechnique }) => {\r\n    const [techniquesState, setTechniquesState] = useState([]);\r\n    const [positions, setPositions] = useState([]);\r\n    const [techniqueTypes, setTechniqueTypes] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const [showDeleteTechniqueModal, setShowDeleteTechniqueModal] = useState(false);\r\n    const [newFieldType, setNewFieldType] = useState('');\r\n    const [newFieldName, setNewFieldName] = useState('');\r\n    const [fieldToDelete, setFieldToDelete] = useState(null);\r\n    const [techniqueToDelete, setTechniqueToDelete] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchTechniques = async () => {\r\n            try {\r\n                const data = await getTechniques();\r\n                setTechniquesState(data);\r\n            } catch (error) {\r\n                console.error('Error al obtener técnicas:', error);\r\n            }\r\n        };\r\n\r\n        const fetchPositions = async () => {\r\n            try {\r\n                const data = await getPositions();\r\n                setPositions(data);\r\n            } catch (error) {\r\n                console.error('Error al obtener posiciones:', error);\r\n            }\r\n        };\r\n\r\n        const fetchTechniqueTypes = async () => {\r\n            try {\r\n                const data = await getTechniqueTypes();\r\n                setTechniqueTypes(data);\r\n            } catch (error) {\r\n                console.error('Error al obtener tipos de técnica:', error);\r\n            }\r\n        };\r\n\r\n        fetchTechniques();\r\n        fetchPositions();\r\n        fetchTechniqueTypes();\r\n    }, []);\r\n\r\n    const getPositionName = (id) => {\r\n        const position = positions.find((pos) => pos._id === id);\r\n        return position ? position.name : 'Sin posición';\r\n    };\r\n\r\n    const getTechniqueTypeName = (idArray) => {\r\n        const names = idArray\r\n            .map((id) => {\r\n                const type = techniqueTypes.find((t) => t._id === id);\r\n                return type ? type.name : 'Sin tipo';\r\n            })\r\n            .join(', ');\r\n        return names;\r\n    };\r\n\r\n    const columns = useMemo(() => {\r\n        const baseColumns = [\r\n            { id: 'name', accessorKey: 'name', header: 'Nombre' },\r\n            {\r\n                id: 'techniqueType',\r\n                accessorKey: 'techniqueType',\r\n                header: 'Tipo',\r\n                cell: ({ getValue }) => getTechniqueTypeName(getValue()),\r\n            },\r\n            {\r\n                id: 'positionStart',\r\n                accessorKey: 'positionStart',\r\n                header: 'Posición Inicial',\r\n                cell: ({ getValue }) => getPositionName(getValue()),\r\n            },\r\n            {\r\n                id: 'endPosition',\r\n                accessorKey: 'endPosition',\r\n                header: 'Posición Final',\r\n                cell: ({ getValue }) => getPositionName(getValue()),\r\n            },\r\n            { id: 'proficiencyLevel', accessorKey: 'proficiencyLevel', header: 'Proficiency Level' },\r\n            { id: 'giNoGi', accessorKey: 'giNoGi', header: 'Gi/No Gi' },\r\n            {\r\n                id: 'actions',\r\n                header: 'Acciones',\r\n                cell: ({ row }) => (\r\n                    <>\r\n                        <button onClick={() => handleDeleteTechniqueClick(row.original._id)} style={styles.deleteButton}>\r\n                            Eliminar\r\n                        </button>\r\n                    </>\r\n                ),\r\n            },\r\n        ];\r\n\r\n        const customFieldColumns = [];\r\n        if (techniquesState.length > 0 && Array.isArray(techniquesState[0].customFields)) {\r\n            techniquesState[0].customFields.forEach((customField) => {\r\n                // Verifica que customField y sus propiedades existen\r\n                if (customField && customField.field && customField.field._id) {\r\n                    customFieldColumns.push({\r\n                        id: customField.field._id,\r\n                        accessorKey: `customFields.${customField.field._id}`,\r\n                        header: (\r\n                            <div>\r\n                                {customField.field.name}\r\n                                <button onClick={() => handleDeleteFieldClick(customField.field._id)} style={styles.deleteFieldButton}>🗑️</button>\r\n                            </div>\r\n                        ),\r\n                        cell: ({ getValue }) => getValue() || 'N/A',\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        return [\r\n            ...baseColumns,\r\n            ...customFieldColumns,\r\n            {\r\n                id: 'addNewField',\r\n                header: (\r\n                    <button onClick={() => setShowModal(true)} style={styles.addNewFieldButton}>\r\n                        Add New Field\r\n                    </button>\r\n                ),\r\n                cell: () => null,\r\n            },\r\n        ];\r\n    }, [positions, techniqueTypes, techniquesState]);\r\n\r\n    const table = useReactTable({\r\n        data: techniquesState,\r\n        columns,\r\n        getCoreRowModel: getCoreRowModel(),\r\n    });\r\n\r\n    const handleAddNewField = async () => {\r\n        try {\r\n            await addCustomField(newFieldName, newFieldType);\r\n            setShowModal(false);\r\n            setNewFieldName('');\r\n            setNewFieldType('');\r\n            const updatedTechniques = await getTechniques();\r\n            setTechniquesState(updatedTechniques);\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 400) {\r\n                console.error('Error al agregar campo personalizado: Este nombre ya existe.');\r\n                alert('El nombre del campo personalizado ya existe. Por favor elige otro.');\r\n            } else {\r\n                console.error('Error al agregar nuevo campo:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const handleDeleteFieldClick = (field) => {\r\n        setFieldToDelete(field);\r\n        setShowDeleteModal(true);\r\n    };\r\n\r\n    const handleConfirmDeleteField = async () => {\r\n        if (!fieldToDelete) {\r\n            console.error(\"Error: fieldToDelete está vacío o no definido.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await deleteCustomField(fieldToDelete);\r\n            setShowDeleteModal(false);\r\n            setFieldToDelete(null);\r\n            const updatedTechniques = await getTechniques();\r\n            setTechniquesState(updatedTechniques);\r\n        } catch (error) {\r\n            console.error('Error al eliminar campo personalizado:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeleteTechniqueClick = (techniqueId) => {\r\n        setTechniqueToDelete(techniqueId);\r\n        setShowDeleteTechniqueModal(true);\r\n    };\r\n\r\n    const handleConfirmDeleteTechnique = async () => {\r\n        try {\r\n            await deleteTechnique(techniqueToDelete);\r\n            setShowDeleteTechniqueModal(false);\r\n            setTechniqueToDelete(null);\r\n            setTechniquesState((prevTechniques) =>\r\n                prevTechniques.filter((technique) => technique._id !== techniqueToDelete)\r\n            );\r\n        } catch (error) {\r\n            console.error('Error al eliminar técnica:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Techniques</h1>\r\n            <table style={styles.table}>\r\n                <thead>\r\n                    {table.getHeaderGroups().map((headerGroup) => (\r\n                        <tr key={headerGroup.id}>\r\n                            {headerGroup.headers.map((header) => (\r\n                                <th key={header.id} style={styles.cell}>\r\n                                    {flexRender(header.column.columnDef.header, header.getContext())}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody>\r\n                    {table.getRowModel().rows.map((row) => (\r\n                        <tr key={row.id}>\r\n                            {row.getVisibleCells().map((cell) => (\r\n                                <td key={cell.id} style={styles.cell}>\r\n                                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            {showModal && (\r\n                <div style={styles.modalOverlay}>\r\n                    <div style={styles.modal}>\r\n                        <h2>Agregar nuevo campo</h2>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Nombre del campo\"\r\n                            value={newFieldName}\r\n                            onChange={(e) => setNewFieldName(e.target.value)}\r\n                            style={styles.input}\r\n                        />\r\n                        <select\r\n                            value={newFieldType}\r\n                            onChange={(e) => setNewFieldType(e.target.value)}\r\n                            style={styles.input}\r\n                        >\r\n                            <option value=\"\">Selecciona el tipo de dato</option>\r\n                            <option value=\"Text\">Texto</option>\r\n                            <option value=\"Number\">Número</option>\r\n                            <option value=\"Checklist\">Checklist</option>\r\n                            <option value=\"Select\">Select</option>\r\n                            <option value=\"Multiselect\">Multiselect</option>\r\n                            <option value=\"Date\">Fecha</option>\r\n                            <option value=\"CreationDate\">Fecha de Creación</option>\r\n                            <option value=\"CreationTime\">Hora de Creación</option>\r\n                            <option value=\"Hyperlink\">URL</option>\r\n                        </select>\r\n\r\n                        <button onClick={handleAddNewField} style={styles.saveButton}>\r\n                            Agregar\r\n                        </button>\r\n                        <button onClick={() => setShowModal(false)} style={styles.closeButton}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {showDeleteModal && (\r\n                <div style={styles.modalOverlay}>\r\n                    <div style={styles.modal}>\r\n                        <h2>¿Eliminar el campo \"{fieldToDelete}\"?</h2>\r\n                        <button onClick={handleConfirmDeleteField} style={styles.deleteButton}>\r\n                            Confirmar\r\n                        </button>\r\n                        <button onClick={() => setShowDeleteModal(false)} style={styles.closeButton}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {showDeleteTechniqueModal && (\r\n                <div style={styles.modalOverlay}>\r\n                    <div style={styles.modal}>\r\n                        <h2>¿Estás seguro de que deseas eliminar esta técnica?</h2>\r\n                        <button onClick={handleConfirmDeleteTechnique} style={styles.deleteButton}>\r\n                            Confirmar\r\n                        </button>\r\n                        <button onClick={() => setShowDeleteTechniqueModal(false)} style={styles.closeButton}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    table: {\r\n        width: '100%',\r\n        borderCollapse: 'collapse',\r\n        border: '1px solid black',\r\n    },\r\n    cell: {\r\n        textAlign: 'left',\r\n        border: '1px solid black',\r\n        padding: '8px',\r\n    },\r\n    deleteButton: {\r\n        color: 'red',\r\n    },\r\n    addNewFieldButton: {\r\n        color: 'blue',\r\n    },\r\n    deleteFieldButton: {\r\n        background: 'none',\r\n        border: 'none',\r\n        color: 'red',\r\n        cursor: 'pointer',\r\n    },\r\n    modalOverlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    modal: {\r\n        backgroundColor: 'white',\r\n        padding: '2rem',\r\n        borderRadius: '5px',\r\n        width: '300px',\r\n    },\r\n    input: {\r\n        width: '100%',\r\n        marginBottom: '1rem',\r\n        padding: '0.5rem',\r\n    },\r\n    saveButton: {\r\n        marginRight: '0.5rem',\r\n    },\r\n    closeButton: {\r\n        color: 'red',\r\n    },\r\n};\r\n\r\nexport default TechniqueTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}