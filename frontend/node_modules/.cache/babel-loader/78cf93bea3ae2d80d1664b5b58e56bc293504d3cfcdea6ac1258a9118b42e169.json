{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\Desktop\\\\bjj-companion\\\\frontend\\\\src\\\\components\\\\TechniqueTable.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { useReactTable, getCoreRowModel, flexRender } from '@tanstack/react-table';\nimport TechniqueForm from './TechniqueForm'; // Asegúrate de importar el formulario aquí\nimport { getPositions, getTechniqueTypes, getTechniques, getTechniqueCustomFields, addTechniqueCustomField, deleteTechniqueCustomField, deleteTechnique } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TechniqueTable = ({\n  updateTechnique\n}) => {\n  _s();\n  const [techniquesState, setTechniquesState] = useState([]);\n  const [positions, setPositions] = useState([]);\n  const [techniqueTypes, setTechniqueTypes] = useState([]);\n  const [customFieldsState, setCustomFieldsState] = useState([]); // Estado para customFields\n  const [showModal, setShowModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [showDeleteTechniqueModal, setShowDeleteTechniqueModal] = useState(false);\n  const [newFieldType, setNewFieldType] = useState('');\n  const [newFieldName, setNewFieldName] = useState('');\n  const [fieldToDelete, setFieldToDelete] = useState(null);\n  const [techniqueToDelete, setTechniqueToDelete] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const techniquesData = await getTechniques();\n        console.log(\"Datos recibidos para techniquesState:\", techniquesData); // <-- Agrega este console.log\n        setTechniquesState(techniquesData);\n        const positionsData = await getPositions();\n        setPositions(positionsData);\n        const techniqueTypesData = await getTechniqueTypes();\n        setTechniqueTypes(techniqueTypesData);\n        const customFieldsData = await getTechniqueCustomFields(); // Obtener customFields desde el backend\n        setCustomFieldsState(customFieldsData);\n      } catch (error) {\n        console.error('Error al obtener datos:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Función para agregar una nueva técnica sin refrescar la página\n  const addNewTechnique = newTechnique => {\n    setTechniquesState(prevTechniques => [...prevTechniques, newTechnique]);\n  };\n  const getPositionName = id => {\n    const position = positions.find(pos => pos._id === id);\n    return position ? position.name : 'Sin posición';\n  };\n  const getTechniqueTypeName = idArray => {\n    const names = idArray.map(id => {\n      const type = techniqueTypes.find(t => t._id === id);\n      return type ? type.name : 'Sin tipo';\n    }).join(', ');\n    return names;\n  };\n  const columns = useMemo(() => {\n    const baseColumns = [{\n      id: 'name',\n      accessorKey: 'name',\n      header: 'Nombre'\n    }, {\n      id: 'techniqueType',\n      accessorKey: 'techniqueType',\n      header: 'Tipo',\n      cell: ({\n        getValue\n      }) => getTechniqueTypeName(getValue())\n    }, {\n      id: 'positionStart',\n      accessorKey: 'positionStart',\n      header: 'Posición Inicial',\n      cell: ({\n        getValue\n      }) => getPositionName(getValue())\n    }, {\n      id: 'endPosition',\n      accessorKey: 'endPosition',\n      header: 'Posición Final',\n      cell: ({\n        getValue\n      }) => getPositionName(getValue())\n    }, {\n      id: 'proficiencyLevel',\n      accessorKey: 'proficiencyLevel',\n      header: 'Proficiency Level'\n    }, {\n      id: 'giNoGi',\n      accessorKey: 'giNoGi',\n      header: 'Gi/No Gi'\n    }, {\n      id: 'actions',\n      header: 'Acciones',\n      cell: ({\n        row\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTechniqueClick(row.original._id),\n          style: styles.deleteButton,\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)\n    }];\n    const customFieldColumns = customFieldsState.map(field => ({\n      id: field._id,\n      accessorFn: row => {\n        const customField = row.TechniqueCustomFields.find(cf => {\n          console.log(\"Comparando:\", cf.field._id ? cf.field._id.toString() : cf.field.toString(), \"con\", field._id.toString());\n          return (cf.field._id ? cf.field._id.toString() : cf.field.toString()) === field._id.toString();\n        });\n        console.log(\"Valor encontrado:\", customField ? customField.value : 'N/A'); // Muestra el valor encontrado\n        return customField ? customField.value : 'N/A';\n      },\n      header: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [field.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteFieldClick(field._id),\n          style: styles.deleteFieldButton,\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this),\n      cell: ({\n        getValue\n      }) => {\n        const value = getValue();\n        if (typeof value === 'boolean') {\n          return value ? \"✔️\" : \"❌\"; // Muestra \"✔️\" para true y \"❌\" para false\n        }\n        return value || ''; // Otros valores o 'N/A' si es null o undefined\n      }\n    }));\n    return [...baseColumns, ...customFieldColumns, {\n      id: 'addNewField',\n      header: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(true),\n        style: styles.addNewFieldButton,\n        children: \"Add New Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this),\n      cell: () => null\n    }];\n  }, [positions, techniqueTypes, techniquesState, customFieldsState, getPositionName, getTechniqueTypeName]);\n  const table = useReactTable({\n    data: techniquesState,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n  const handleAddNewField = async () => {\n    try {\n      await addTechniqueCustomField(newFieldName, newFieldType);\n      setShowModal(false);\n      setNewFieldName('');\n      setNewFieldType('');\n      const updatedCustomFields = await getTechniqueCustomFields();\n      setCustomFieldsState(updatedCustomFields); // Actualizar el estado de customFields\n    } catch (error) {\n      console.error('Error al agregar campo personalizado:', error);\n    }\n  };\n  const handleDeleteFieldClick = field => {\n    setFieldToDelete(field);\n    setShowDeleteModal(true);\n  };\n  const handleConfirmDeleteField = async () => {\n    if (!fieldToDelete) return;\n    try {\n      await deleteTechniqueCustomField(fieldToDelete);\n      setShowDeleteModal(false);\n      setFieldToDelete(null);\n      const updatedCustomFields = await getTechniqueCustomFields();\n      setCustomFieldsState(updatedCustomFields);\n    } catch (error) {\n      console.error('Error al eliminar campo personalizado:', error);\n    }\n  };\n  const handleDeleteTechniqueClick = techniqueId => {\n    setTechniqueToDelete(techniqueId);\n    setShowDeleteTechniqueModal(true);\n  };\n  const handleConfirmDeleteTechnique = async () => {\n    try {\n      await deleteTechnique(techniqueToDelete);\n      setShowDeleteTechniqueModal(false);\n      setTechniqueToDelete(null);\n      setTechniquesState(prevTechniques => prevTechniques.filter(technique => technique._id !== techniqueToDelete));\n    } catch (error) {\n      console.error('Error al eliminar técnica:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TechniqueForm, {\n      addNewTechnique: addNewTechnique\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Techniques\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            style: styles.cell,\n            children: flexRender(header.column.columnDef.header, header.getContext())\n          }, header.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 33\n          }, this))\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: styles.cell,\n            children: flexRender(cell.column.columnDef.cell, cell.getContext())\n          }, cell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 33\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.modalOverlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.modal,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Agregar nuevo campo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Nombre del campo\",\n          value: newFieldName,\n          onChange: e => setNewFieldName(e.target.value),\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newFieldType,\n          onChange: e => setNewFieldType(e.target.value),\n          style: styles.input,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona el tipo de dato\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Text\",\n            children: \"Texto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Number\",\n            children: \"N\\xFAmero\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Checklist\",\n            children: \"Checklist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Select\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Multiselect\",\n            children: \"Multiselect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Date\",\n            children: \"Fecha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CreationDate\",\n            children: \"Fecha de Creaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CreationTime\",\n            children: \"Hora de Creaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Hyperlink\",\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddNewField,\n          style: styles.saveButton,\n          children: \"Agregar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          style: styles.closeButton,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }, this), showDeleteModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.modalOverlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.modal,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\xBFEliminar el campo \\\"\", fieldToDelete, \"\\\"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirmDeleteField,\n          style: styles.deleteButton,\n          children: \"Confirmar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowDeleteModal(false),\n          style: styles.closeButton,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }, this), showDeleteTechniqueModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.modalOverlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.modal,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\xBFEst\\xE1s seguro de que deseas eliminar esta t\\xE9cnica?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirmDeleteTechnique,\n          style: styles.deleteButton,\n          children: \"Confirmar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowDeleteTechniqueModal(false),\n          style: styles.closeButton,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 9\n  }, this);\n};\n_s(TechniqueTable, \"0qbhJ0vtWSEc1+nEvyfn1/DRwqE=\", false, function () {\n  return [useReactTable];\n});\n_c = TechniqueTable;\nconst styles = {\n  table: {\n    width: '100%',\n    borderCollapse: 'collapse',\n    border: '1px solid black'\n  },\n  cell: {\n    textAlign: 'left',\n    border: '1px solid black',\n    padding: '8px'\n  },\n  deleteButton: {\n    color: 'red'\n  },\n  addNewFieldButton: {\n    color: 'blue'\n  },\n  deleteFieldButton: {\n    background: 'none',\n    border: 'none',\n    color: 'red',\n    cursor: 'pointer'\n  },\n  modalOverlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modal: {\n    backgroundColor: 'white',\n    padding: '2rem',\n    borderRadius: '5px',\n    width: '300px'\n  },\n  input: {\n    width: '100%',\n    marginBottom: '1rem',\n    padding: '0.5rem'\n  },\n  saveButton: {\n    marginRight: '0.5rem'\n  },\n  closeButton: {\n    color: 'red'\n  }\n};\nexport default TechniqueTable;\nvar _c;\n$RefreshReg$(_c, \"TechniqueTable\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","useReactTable","getCoreRowModel","flexRender","TechniqueForm","getPositions","getTechniqueTypes","getTechniques","getTechniqueCustomFields","addTechniqueCustomField","deleteTechniqueCustomField","deleteTechnique","jsxDEV","_jsxDEV","Fragment","_Fragment","TechniqueTable","updateTechnique","_s","techniquesState","setTechniquesState","positions","setPositions","techniqueTypes","setTechniqueTypes","customFieldsState","setCustomFieldsState","showModal","setShowModal","showDeleteModal","setShowDeleteModal","showDeleteTechniqueModal","setShowDeleteTechniqueModal","newFieldType","setNewFieldType","newFieldName","setNewFieldName","fieldToDelete","setFieldToDelete","techniqueToDelete","setTechniqueToDelete","fetchData","techniquesData","console","log","positionsData","techniqueTypesData","customFieldsData","error","addNewTechnique","newTechnique","prevTechniques","getPositionName","id","position","find","pos","_id","name","getTechniqueTypeName","idArray","names","map","type","t","join","columns","baseColumns","accessorKey","header","cell","getValue","row","children","onClick","handleDeleteTechniqueClick","original","style","styles","deleteButton","fileName","_jsxFileName","lineNumber","columnNumber","customFieldColumns","field","accessorFn","customField","TechniqueCustomFields","cf","toString","value","handleDeleteFieldClick","deleteFieldButton","addNewFieldButton","table","data","handleAddNewField","updatedCustomFields","handleConfirmDeleteField","techniqueId","handleConfirmDeleteTechnique","filter","technique","getHeaderGroups","headerGroup","headers","column","columnDef","getContext","getRowModel","rows","getVisibleCells","modalOverlay","modal","placeholder","onChange","e","target","input","saveButton","closeButton","_c","width","borderCollapse","border","textAlign","padding","color","background","cursor","top","left","right","bottom","backgroundColor","display","justifyContent","alignItems","borderRadius","marginBottom","marginRight","$RefreshReg$"],"sources":["C:/Users/alber/Desktop/bjj-companion/frontend/src/components/TechniqueTable.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\r\nimport { useReactTable, getCoreRowModel, flexRender } from '@tanstack/react-table';\r\nimport TechniqueForm from './TechniqueForm'; // Asegúrate de importar el formulario aquí\r\nimport {\r\n    getPositions,\r\n    getTechniqueTypes,\r\n    getTechniques,\r\n    getTechniqueCustomFields,\r\n    addTechniqueCustomField,\r\n    deleteTechniqueCustomField,\r\n    deleteTechnique\r\n} from '../services/api';\r\n\r\nconst TechniqueTable = ({ updateTechnique }) => {\r\n    const [techniquesState, setTechniquesState] = useState([]);\r\n    const [positions, setPositions] = useState([]);\r\n    const [techniqueTypes, setTechniqueTypes] = useState([]);\r\n    const [customFieldsState, setCustomFieldsState] = useState([]);  // Estado para customFields\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const [showDeleteTechniqueModal, setShowDeleteTechniqueModal] = useState(false);\r\n    const [newFieldType, setNewFieldType] = useState('');\r\n    const [newFieldName, setNewFieldName] = useState('');\r\n    const [fieldToDelete, setFieldToDelete] = useState(null);\r\n    const [techniqueToDelete, setTechniqueToDelete] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const techniquesData = await getTechniques();\r\n                console.log(\"Datos recibidos para techniquesState:\", techniquesData); // <-- Agrega este console.log\r\n                setTechniquesState(techniquesData);\r\n\r\n                const positionsData = await getPositions();\r\n                setPositions(positionsData);\r\n\r\n                const techniqueTypesData = await getTechniqueTypes();\r\n                setTechniqueTypes(techniqueTypesData);\r\n\r\n                const customFieldsData = await getTechniqueCustomFields();  // Obtener customFields desde el backend\r\n                setCustomFieldsState(customFieldsData);\r\n            } catch (error) {\r\n                console.error('Error al obtener datos:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Función para agregar una nueva técnica sin refrescar la página\r\n    const addNewTechnique = (newTechnique) => {\r\n        setTechniquesState((prevTechniques) => [...prevTechniques, newTechnique]);\r\n    };\r\n\r\n    const getPositionName = (id) => {\r\n        const position = positions.find((pos) => pos._id === id);\r\n        return position ? position.name : 'Sin posición';\r\n    };\r\n\r\n    const getTechniqueTypeName = (idArray) => {\r\n        const names = idArray\r\n            .map((id) => {\r\n                const type = techniqueTypes.find((t) => t._id === id);\r\n                return type ? type.name : 'Sin tipo';\r\n            })\r\n            .join(', ');\r\n        return names;\r\n    };\r\n\r\n    const columns = useMemo(() => {\r\n        const baseColumns = [\r\n            { id: 'name', accessorKey: 'name', header: 'Nombre' },\r\n            {\r\n                id: 'techniqueType',\r\n                accessorKey: 'techniqueType',\r\n                header: 'Tipo',\r\n                cell: ({ getValue }) => getTechniqueTypeName(getValue()),\r\n            },\r\n            {\r\n                id: 'positionStart',\r\n                accessorKey: 'positionStart',\r\n                header: 'Posición Inicial',\r\n                cell: ({ getValue }) => getPositionName(getValue()),\r\n            },\r\n            {\r\n                id: 'endPosition',\r\n                accessorKey: 'endPosition',\r\n                header: 'Posición Final',\r\n                cell: ({ getValue }) => getPositionName(getValue()),\r\n            },\r\n            { id: 'proficiencyLevel', accessorKey: 'proficiencyLevel', header: 'Proficiency Level' },\r\n            { id: 'giNoGi', accessorKey: 'giNoGi', header: 'Gi/No Gi' },\r\n            {\r\n                id: 'actions',\r\n                header: 'Acciones',\r\n                cell: ({ row }) => (\r\n                    <>\r\n                        <button onClick={() => handleDeleteTechniqueClick(row.original._id)} style={styles.deleteButton}>\r\n                            Eliminar\r\n                        </button>\r\n                    </>\r\n                ),\r\n            },\r\n        ];\r\n\r\n        const customFieldColumns = customFieldsState.map((field) => ({\r\n            id: field._id,\r\n            accessorFn: (row) => {\r\n                const customField = row.TechniqueCustomFields.find(cf => {\r\n                    console.log(\"Comparando:\", cf.field._id ? cf.field._id.toString() : cf.field.toString(), \"con\", field._id.toString());\r\n                    return (cf.field._id ? cf.field._id.toString() : cf.field.toString()) === field._id.toString();\r\n                });\r\n                console.log(\"Valor encontrado:\", customField ? customField.value : 'N/A'); // Muestra el valor encontrado\r\n                return customField ? customField.value : 'N/A';\r\n            },\r\n            header: (\r\n                <div>\r\n                    {field.name}\r\n                    <button onClick={() => handleDeleteFieldClick(field._id)} style={styles.deleteFieldButton}>🗑️</button>\r\n                </div>\r\n            ),\r\n            cell: ({ getValue }) => {\r\n        const value = getValue();\r\n        if (typeof value === 'boolean') {\r\n            return value ? \"✔️\" : \"❌\"; // Muestra \"✔️\" para true y \"❌\" para false\r\n        }\r\n        return value || ''; // Otros valores o 'N/A' si es null o undefined\r\n    },\r\n        }));\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return [\r\n            ...baseColumns,\r\n            ...customFieldColumns,\r\n            {\r\n                id: 'addNewField',\r\n                header: (\r\n                    <button onClick={() => setShowModal(true)} style={styles.addNewFieldButton}>\r\n                        Add New Field\r\n                    </button>\r\n                ),\r\n                cell: () => null,\r\n            },\r\n        ];\r\n    }, [positions, techniqueTypes, techniquesState, customFieldsState, getPositionName, getTechniqueTypeName]);\r\n\r\n    const table = useReactTable({\r\n        data: techniquesState,\r\n        columns,\r\n        getCoreRowModel: getCoreRowModel(),\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddNewField = async () => {\r\n        try {\r\n            await addTechniqueCustomField(newFieldName, newFieldType);\r\n            setShowModal(false);\r\n            setNewFieldName('');\r\n            setNewFieldType('');\r\n            const updatedCustomFields = await getTechniqueCustomFields();\r\n            setCustomFieldsState(updatedCustomFields); // Actualizar el estado de customFields\r\n        } catch (error) {\r\n            console.error('Error al agregar campo personalizado:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeleteFieldClick = (field) => {\r\n        setFieldToDelete(field);\r\n        setShowDeleteModal(true);\r\n    };\r\n\r\n    const handleConfirmDeleteField = async () => {\r\n        if (!fieldToDelete) return;\r\n        try {\r\n            await deleteTechniqueCustomField(fieldToDelete);\r\n            setShowDeleteModal(false);\r\n            setFieldToDelete(null);\r\n            const updatedCustomFields = await getTechniqueCustomFields();\r\n            setCustomFieldsState(updatedCustomFields);\r\n        } catch (error) {\r\n            console.error('Error al eliminar campo personalizado:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeleteTechniqueClick = (techniqueId) => {\r\n        setTechniqueToDelete(techniqueId);\r\n        setShowDeleteTechniqueModal(true);\r\n    };\r\n\r\n    const handleConfirmDeleteTechnique = async () => {\r\n        try {\r\n            await deleteTechnique(techniqueToDelete);\r\n            setShowDeleteTechniqueModal(false);\r\n            setTechniqueToDelete(null);\r\n            setTechniquesState((prevTechniques) =>\r\n                prevTechniques.filter((technique) => technique._id !== techniqueToDelete)\r\n            );\r\n        } catch (error) {\r\n            console.error('Error al eliminar técnica:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TechniqueForm addNewTechnique={addNewTechnique} /> {/* No renderiza, solo pasa la función */}\r\n            <h1>Techniques</h1>\r\n            <table style={styles.table}>\r\n                <thead>\r\n                    {table.getHeaderGroups().map((headerGroup) => (\r\n                        <tr key={headerGroup.id}>\r\n                            {headerGroup.headers.map((header) => (\r\n                                <th key={header.id} style={styles.cell}>\r\n                                    {flexRender(header.column.columnDef.header, header.getContext())}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody>\r\n                    {table.getRowModel().rows.map((row) => (\r\n                        <tr key={row.id}>\r\n                            {row.getVisibleCells().map((cell) => (\r\n                                <td key={cell.id} style={styles.cell}>\r\n                                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            {/* Modals para agregar/eliminar campos y técnicas */}\r\n            {showModal && (\r\n                <div style={styles.modalOverlay}>\r\n                    <div style={styles.modal}>\r\n                        <h2>Agregar nuevo campo</h2>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Nombre del campo\"\r\n                            value={newFieldName}\r\n                            onChange={(e) => setNewFieldName(e.target.value)}\r\n                            style={styles.input}\r\n                        />\r\n                        <select\r\n                            value={newFieldType}\r\n                            onChange={(e) => setNewFieldType(e.target.value)}\r\n                            style={styles.input}\r\n                        >\r\n                            <option value=\"\">Selecciona el tipo de dato</option>\r\n                            <option value=\"Text\">Texto</option>\r\n                            <option value=\"Number\">Número</option>\r\n                            <option value=\"Checklist\">Checklist</option>\r\n                            <option value=\"Select\">Select</option>\r\n                            <option value=\"Multiselect\">Multiselect</option>\r\n                            <option value=\"Date\">Fecha</option>\r\n                            <option value=\"CreationDate\">Fecha de Creación</option>\r\n                            <option value=\"CreationTime\">Hora de Creación</option>\r\n                            <option value=\"Hyperlink\">URL</option>\r\n                        </select>\r\n\r\n                        <button onClick={handleAddNewField} style={styles.saveButton}>\r\n                            Agregar\r\n                        </button>\r\n                        <button onClick={() => setShowModal(false)} style={styles.closeButton}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {showDeleteModal && (\r\n                <div style={styles.modalOverlay}>\r\n                    <div style={styles.modal}>\r\n                        <h2>¿Eliminar el campo \"{fieldToDelete}\"?</h2>\r\n                        <button onClick={handleConfirmDeleteField} style={styles.deleteButton}>\r\n                            Confirmar\r\n                        </button>\r\n                        <button onClick={() => setShowDeleteModal(false)} style={styles.closeButton}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {showDeleteTechniqueModal && (\r\n                <div style={styles.modalOverlay}>\r\n                    <div style={styles.modal}>\r\n                        <h2>¿Estás seguro de que deseas eliminar esta técnica?</h2>\r\n                        <button onClick={handleConfirmDeleteTechnique} style={styles.deleteButton}>\r\n                            Confirmar\r\n                        </button>\r\n                        <button onClick={() => setShowDeleteTechniqueModal(false)} style={styles.closeButton}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    table: {\r\n        width: '100%',\r\n        borderCollapse: 'collapse',\r\n        border: '1px solid black',\r\n    },\r\n    cell: {\r\n        textAlign: 'left',\r\n        border: '1px solid black',\r\n        padding: '8px',\r\n    },\r\n    deleteButton: {\r\n        color: 'red',\r\n    },\r\n    addNewFieldButton: {\r\n        color: 'blue',\r\n    },\r\n    deleteFieldButton: {\r\n        background: 'none',\r\n        border: 'none',\r\n        color: 'red',\r\n        cursor: 'pointer',\r\n    },\r\n    modalOverlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    modal: {\r\n        backgroundColor: 'white',\r\n        padding: '2rem',\r\n        borderRadius: '5px',\r\n        width: '300px',\r\n    },\r\n    input: {\r\n        width: '100%',\r\n        marginBottom: '1rem',\r\n        padding: '0.5rem',\r\n    },\r\n    saveButton: {\r\n        marginRight: '0.5rem',\r\n    },\r\n    closeButton: {\r\n        color: 'red',\r\n    },\r\n};\r\n\r\nexport default TechniqueTable;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3D,SAASC,aAAa,EAAEC,eAAe,EAAEC,UAAU,QAAQ,uBAAuB;AAClF,OAAOC,aAAa,MAAM,iBAAiB,CAAC,CAAC;AAC7C,SACIC,YAAY,EACZC,iBAAiB,EACjBC,aAAa,EACbC,wBAAwB,EACxBC,uBAAuB,EACvBC,0BAA0B,EAC1BC,eAAe,QACZ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwB,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC0B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EACjE,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC8B,eAAe,EAAEC,kBAAkB,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACgC,wBAAwB,EAAEC,2BAA2B,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAC/E,MAAM,CAACkC,YAAY,EAAEC,eAAe,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoC,YAAY,EAAEC,eAAe,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACsC,aAAa,EAAEC,gBAAgB,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACwC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;EAEhEC,SAAS,CAAC,MAAM;IACZ,MAAMyC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,cAAc,GAAG,MAAMnC,aAAa,CAAC,CAAC;QAC5CoC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEF,cAAc,CAAC,CAAC,CAAC;QACtEtB,kBAAkB,CAACsB,cAAc,CAAC;QAElC,MAAMG,aAAa,GAAG,MAAMxC,YAAY,CAAC,CAAC;QAC1CiB,YAAY,CAACuB,aAAa,CAAC;QAE3B,MAAMC,kBAAkB,GAAG,MAAMxC,iBAAiB,CAAC,CAAC;QACpDkB,iBAAiB,CAACsB,kBAAkB,CAAC;QAErC,MAAMC,gBAAgB,GAAG,MAAMvC,wBAAwB,CAAC,CAAC,CAAC,CAAE;QAC5DkB,oBAAoB,CAACqB,gBAAgB,CAAC;MAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZL,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ,CAAC;IAEDP,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,eAAe,GAAIC,YAAY,IAAK;IACtC9B,kBAAkB,CAAE+B,cAAc,IAAK,CAAC,GAAGA,cAAc,EAAED,YAAY,CAAC,CAAC;EAC7E,CAAC;EAED,MAAME,eAAe,GAAIC,EAAE,IAAK;IAC5B,MAAMC,QAAQ,GAAGjC,SAAS,CAACkC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,GAAG,KAAKJ,EAAE,CAAC;IACxD,OAAOC,QAAQ,GAAGA,QAAQ,CAACI,IAAI,GAAG,cAAc;EACpD,CAAC;EAED,MAAMC,oBAAoB,GAAIC,OAAO,IAAK;IACtC,MAAMC,KAAK,GAAGD,OAAO,CAChBE,GAAG,CAAET,EAAE,IAAK;MACT,MAAMU,IAAI,GAAGxC,cAAc,CAACgC,IAAI,CAAES,CAAC,IAAKA,CAAC,CAACP,GAAG,KAAKJ,EAAE,CAAC;MACrD,OAAOU,IAAI,GAAGA,IAAI,CAACL,IAAI,GAAG,UAAU;IACxC,CAAC,CAAC,CACDO,IAAI,CAAC,IAAI,CAAC;IACf,OAAOJ,KAAK;EAChB,CAAC;EAED,MAAMK,OAAO,GAAGpE,OAAO,CAAC,MAAM;IAC1B,MAAMqE,WAAW,GAAG,CAChB;MAAEd,EAAE,EAAE,MAAM;MAAEe,WAAW,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAS,CAAC,EACrD;MACIhB,EAAE,EAAE,eAAe;MACnBe,WAAW,EAAE,eAAe;MAC5BC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEA,CAAC;QAAEC;MAAS,CAAC,KAAKZ,oBAAoB,CAACY,QAAQ,CAAC,CAAC;IAC3D,CAAC,EACD;MACIlB,EAAE,EAAE,eAAe;MACnBe,WAAW,EAAE,eAAe;MAC5BC,MAAM,EAAE,kBAAkB;MAC1BC,IAAI,EAAEA,CAAC;QAAEC;MAAS,CAAC,KAAKnB,eAAe,CAACmB,QAAQ,CAAC,CAAC;IACtD,CAAC,EACD;MACIlB,EAAE,EAAE,aAAa;MACjBe,WAAW,EAAE,aAAa;MAC1BC,MAAM,EAAE,gBAAgB;MACxBC,IAAI,EAAEA,CAAC;QAAEC;MAAS,CAAC,KAAKnB,eAAe,CAACmB,QAAQ,CAAC,CAAC;IACtD,CAAC,EACD;MAAElB,EAAE,EAAE,kBAAkB;MAAEe,WAAW,EAAE,kBAAkB;MAAEC,MAAM,EAAE;IAAoB,CAAC,EACxF;MAAEhB,EAAE,EAAE,QAAQ;MAAEe,WAAW,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAW,CAAC,EAC3D;MACIhB,EAAE,EAAE,SAAS;MACbgB,MAAM,EAAE,UAAU;MAClBC,IAAI,EAAEA,CAAC;QAAEE;MAAI,CAAC,kBACV3D,OAAA,CAAAE,SAAA;QAAA0D,QAAA,eACI5D,OAAA;UAAQ6D,OAAO,EAAEA,CAAA,KAAMC,0BAA0B,CAACH,GAAG,CAACI,QAAQ,CAACnB,GAAG,CAAE;UAACoB,KAAK,EAAEC,MAAM,CAACC,YAAa;UAAAN,QAAA,EAAC;QAEjG;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC,gBACX;IAEV,CAAC,CACJ;IAED,MAAMC,kBAAkB,GAAG3D,iBAAiB,CAACqC,GAAG,CAAEuB,KAAK,KAAM;MACzDhC,EAAE,EAAEgC,KAAK,CAAC5B,GAAG;MACb6B,UAAU,EAAGd,GAAG,IAAK;QACjB,MAAMe,WAAW,GAAGf,GAAG,CAACgB,qBAAqB,CAACjC,IAAI,CAACkC,EAAE,IAAI;UACrD9C,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE6C,EAAE,CAACJ,KAAK,CAAC5B,GAAG,GAAGgC,EAAE,CAACJ,KAAK,CAAC5B,GAAG,CAACiC,QAAQ,CAAC,CAAC,GAAGD,EAAE,CAACJ,KAAK,CAACK,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAEL,KAAK,CAAC5B,GAAG,CAACiC,QAAQ,CAAC,CAAC,CAAC;UACrH,OAAO,CAACD,EAAE,CAACJ,KAAK,CAAC5B,GAAG,GAAGgC,EAAE,CAACJ,KAAK,CAAC5B,GAAG,CAACiC,QAAQ,CAAC,CAAC,GAAGD,EAAE,CAACJ,KAAK,CAACK,QAAQ,CAAC,CAAC,MAAML,KAAK,CAAC5B,GAAG,CAACiC,QAAQ,CAAC,CAAC;QAClG,CAAC,CAAC;QACF/C,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE2C,WAAW,GAAGA,WAAW,CAACI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;QAC3E,OAAOJ,WAAW,GAAGA,WAAW,CAACI,KAAK,GAAG,KAAK;MAClD,CAAC;MACDtB,MAAM,eACFxD,OAAA;QAAA4D,QAAA,GACKY,KAAK,CAAC3B,IAAI,eACX7C,OAAA;UAAQ6D,OAAO,EAAEA,CAAA,KAAMkB,sBAAsB,CAACP,KAAK,CAAC5B,GAAG,CAAE;UAACoB,KAAK,EAAEC,MAAM,CAACe,iBAAkB;UAAApB,QAAA,EAAC;QAAG;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtG,CACR;MACDb,IAAI,EAAEA,CAAC;QAAEC;MAAS,CAAC,KAAK;QAC5B,MAAMoB,KAAK,GAAGpB,QAAQ,CAAC,CAAC;QACxB,IAAI,OAAOoB,KAAK,KAAK,SAAS,EAAE;UAC5B,OAAOA,KAAK,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;QAC/B;QACA,OAAOA,KAAK,IAAI,EAAE,CAAC,CAAC;MACxB;IACI,CAAC,CAAC,CAAC;IAOH,OAAO,CACH,GAAGxB,WAAW,EACd,GAAGiB,kBAAkB,EACrB;MACI/B,EAAE,EAAE,aAAa;MACjBgB,MAAM,eACFxD,OAAA;QAAQ6D,OAAO,EAAEA,CAAA,KAAM9C,YAAY,CAAC,IAAI,CAAE;QAACiD,KAAK,EAAEC,MAAM,CAACgB,iBAAkB;QAAArB,QAAA,EAAC;MAE5E;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACX;MACDb,IAAI,EAAEA,CAAA,KAAM;IAChB,CAAC,CACJ;EACL,CAAC,EAAE,CAACjD,SAAS,EAAEE,cAAc,EAAEJ,eAAe,EAAEM,iBAAiB,EAAE2B,eAAe,EAAEO,oBAAoB,CAAC,CAAC;EAE1G,MAAMoC,KAAK,GAAG9F,aAAa,CAAC;IACxB+F,IAAI,EAAE7E,eAAe;IACrB+C,OAAO;IACPhE,eAAe,EAAEA,eAAe,CAAC;EACrC,CAAC,CAAC;EAMF,MAAM+F,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMxF,uBAAuB,CAAC0B,YAAY,EAAEF,YAAY,CAAC;MACzDL,YAAY,CAAC,KAAK,CAAC;MACnBQ,eAAe,CAAC,EAAE,CAAC;MACnBF,eAAe,CAAC,EAAE,CAAC;MACnB,MAAMgE,mBAAmB,GAAG,MAAM1F,wBAAwB,CAAC,CAAC;MAC5DkB,oBAAoB,CAACwE,mBAAmB,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC,OAAOlD,KAAK,EAAE;MACZL,OAAO,CAACK,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IACjE;EACJ,CAAC;EAED,MAAM4C,sBAAsB,GAAIP,KAAK,IAAK;IACtC/C,gBAAgB,CAAC+C,KAAK,CAAC;IACvBvD,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMqE,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI,CAAC9D,aAAa,EAAE;IACpB,IAAI;MACA,MAAM3B,0BAA0B,CAAC2B,aAAa,CAAC;MAC/CP,kBAAkB,CAAC,KAAK,CAAC;MACzBQ,gBAAgB,CAAC,IAAI,CAAC;MACtB,MAAM4D,mBAAmB,GAAG,MAAM1F,wBAAwB,CAAC,CAAC;MAC5DkB,oBAAoB,CAACwE,mBAAmB,CAAC;IAC7C,CAAC,CAAC,OAAOlD,KAAK,EAAE;MACZL,OAAO,CAACK,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAClE;EACJ,CAAC;EAED,MAAM2B,0BAA0B,GAAIyB,WAAW,IAAK;IAChD5D,oBAAoB,CAAC4D,WAAW,CAAC;IACjCpE,2BAA2B,CAAC,IAAI,CAAC;EACrC,CAAC;EAED,MAAMqE,4BAA4B,GAAG,MAAAA,CAAA,KAAY;IAC7C,IAAI;MACA,MAAM1F,eAAe,CAAC4B,iBAAiB,CAAC;MACxCP,2BAA2B,CAAC,KAAK,CAAC;MAClCQ,oBAAoB,CAAC,IAAI,CAAC;MAC1BpB,kBAAkB,CAAE+B,cAAc,IAC9BA,cAAc,CAACmD,MAAM,CAAEC,SAAS,IAAKA,SAAS,CAAC9C,GAAG,KAAKlB,iBAAiB,CAC5E,CAAC;IACL,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZL,OAAO,CAACK,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;EAED,oBACInC,OAAA;IAAA4D,QAAA,gBACI5D,OAAA,CAACT,aAAa;MAAC6C,eAAe,EAAEA;IAAgB;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eACpDtE,OAAA;MAAA4D,QAAA,EAAI;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBtE,OAAA;MAAOgE,KAAK,EAAEC,MAAM,CAACiB,KAAM;MAAAtB,QAAA,gBACvB5D,OAAA;QAAA4D,QAAA,EACKsB,KAAK,CAACS,eAAe,CAAC,CAAC,CAAC1C,GAAG,CAAE2C,WAAW,iBACrC5F,OAAA;UAAA4D,QAAA,EACKgC,WAAW,CAACC,OAAO,CAAC5C,GAAG,CAAEO,MAAM,iBAC5BxD,OAAA;YAAoBgE,KAAK,EAAEC,MAAM,CAACR,IAAK;YAAAG,QAAA,EAClCtE,UAAU,CAACkE,MAAM,CAACsC,MAAM,CAACC,SAAS,CAACvC,MAAM,EAAEA,MAAM,CAACwC,UAAU,CAAC,CAAC;UAAC,GAD3DxC,MAAM,CAAChB,EAAE;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEd,CACP;QAAC,GALGsB,WAAW,CAACpD,EAAE;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMnB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACRtE,OAAA;QAAA4D,QAAA,EACKsB,KAAK,CAACe,WAAW,CAAC,CAAC,CAACC,IAAI,CAACjD,GAAG,CAAEU,GAAG,iBAC9B3D,OAAA;UAAA4D,QAAA,EACKD,GAAG,CAACwC,eAAe,CAAC,CAAC,CAAClD,GAAG,CAAEQ,IAAI,iBAC5BzD,OAAA;YAAkBgE,KAAK,EAAEC,MAAM,CAACR,IAAK;YAAAG,QAAA,EAChCtE,UAAU,CAACmE,IAAI,CAACqC,MAAM,CAACC,SAAS,CAACtC,IAAI,EAAEA,IAAI,CAACuC,UAAU,CAAC,CAAC;UAAC,GADrDvC,IAAI,CAACjB,EAAE;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEZ,CACP;QAAC,GALGX,GAAG,CAACnB,EAAE;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMX,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAGPxD,SAAS,iBACNd,OAAA;MAAKgE,KAAK,EAAEC,MAAM,CAACmC,YAAa;MAAAxC,QAAA,eAC5B5D,OAAA;QAAKgE,KAAK,EAAEC,MAAM,CAACoC,KAAM;QAAAzC,QAAA,gBACrB5D,OAAA;UAAA4D,QAAA,EAAI;QAAmB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BtE,OAAA;UACIkD,IAAI,EAAC,MAAM;UACXoD,WAAW,EAAC,kBAAkB;UAC9BxB,KAAK,EAAExD,YAAa;UACpBiF,QAAQ,EAAGC,CAAC,IAAKjF,eAAe,CAACiF,CAAC,CAACC,MAAM,CAAC3B,KAAK,CAAE;UACjDd,KAAK,EAAEC,MAAM,CAACyC;QAAM;UAAAvC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACFtE,OAAA;UACI8E,KAAK,EAAE1D,YAAa;UACpBmF,QAAQ,EAAGC,CAAC,IAAKnF,eAAe,CAACmF,CAAC,CAACC,MAAM,CAAC3B,KAAK,CAAE;UACjDd,KAAK,EAAEC,MAAM,CAACyC,KAAM;UAAA9C,QAAA,gBAEpB5D,OAAA;YAAQ8E,KAAK,EAAC,EAAE;YAAAlB,QAAA,EAAC;UAA0B;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpDtE,OAAA;YAAQ8E,KAAK,EAAC,MAAM;YAAAlB,QAAA,EAAC;UAAK;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnCtE,OAAA;YAAQ8E,KAAK,EAAC,QAAQ;YAAAlB,QAAA,EAAC;UAAM;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtCtE,OAAA;YAAQ8E,KAAK,EAAC,WAAW;YAAAlB,QAAA,EAAC;UAAS;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC5CtE,OAAA;YAAQ8E,KAAK,EAAC,QAAQ;YAAAlB,QAAA,EAAC;UAAM;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtCtE,OAAA;YAAQ8E,KAAK,EAAC,aAAa;YAAAlB,QAAA,EAAC;UAAW;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAChDtE,OAAA;YAAQ8E,KAAK,EAAC,MAAM;YAAAlB,QAAA,EAAC;UAAK;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnCtE,OAAA;YAAQ8E,KAAK,EAAC,cAAc;YAAAlB,QAAA,EAAC;UAAiB;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACvDtE,OAAA;YAAQ8E,KAAK,EAAC,cAAc;YAAAlB,QAAA,EAAC;UAAgB;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtDtE,OAAA;YAAQ8E,KAAK,EAAC,WAAW;YAAAlB,QAAA,EAAC;UAAG;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eAETtE,OAAA;UAAQ6D,OAAO,EAAEuB,iBAAkB;UAACpB,KAAK,EAAEC,MAAM,CAAC0C,UAAW;UAAA/C,QAAA,EAAC;QAE9D;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTtE,OAAA;UAAQ6D,OAAO,EAAEA,CAAA,KAAM9C,YAAY,CAAC,KAAK,CAAE;UAACiD,KAAK,EAAEC,MAAM,CAAC2C,WAAY;UAAAhD,QAAA,EAAC;QAEvE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR,EAEAtD,eAAe,iBACZhB,OAAA;MAAKgE,KAAK,EAAEC,MAAM,CAACmC,YAAa;MAAAxC,QAAA,eAC5B5D,OAAA;QAAKgE,KAAK,EAAEC,MAAM,CAACoC,KAAM;QAAAzC,QAAA,gBACrB5D,OAAA;UAAA4D,QAAA,GAAI,0BAAoB,EAACpC,aAAa,EAAC,KAAE;QAAA;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9CtE,OAAA;UAAQ6D,OAAO,EAAEyB,wBAAyB;UAACtB,KAAK,EAAEC,MAAM,CAACC,YAAa;UAAAN,QAAA,EAAC;QAEvE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTtE,OAAA;UAAQ6D,OAAO,EAAEA,CAAA,KAAM5C,kBAAkB,CAAC,KAAK,CAAE;UAAC+C,KAAK,EAAEC,MAAM,CAAC2C,WAAY;UAAAhD,QAAA,EAAC;QAE7E;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR,EAEApD,wBAAwB,iBACrBlB,OAAA;MAAKgE,KAAK,EAAEC,MAAM,CAACmC,YAAa;MAAAxC,QAAA,eAC5B5D,OAAA;QAAKgE,KAAK,EAAEC,MAAM,CAACoC,KAAM;QAAAzC,QAAA,gBACrB5D,OAAA;UAAA4D,QAAA,EAAI;QAAkD;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3DtE,OAAA;UAAQ6D,OAAO,EAAE2B,4BAA6B;UAACxB,KAAK,EAAEC,MAAM,CAACC,YAAa;UAAAN,QAAA,EAAC;QAE3E;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTtE,OAAA;UAAQ6D,OAAO,EAAEA,CAAA,KAAM1C,2BAA2B,CAAC,KAAK,CAAE;UAAC6C,KAAK,EAAEC,MAAM,CAAC2C,WAAY;UAAAhD,QAAA,EAAC;QAEtF;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACjE,EAAA,CArSIF,cAAc;EAAA,QAyIFf,aAAa;AAAA;AAAAyH,EAAA,GAzIzB1G,cAAc;AAuSpB,MAAM8D,MAAM,GAAG;EACXiB,KAAK,EAAE;IACH4B,KAAK,EAAE,MAAM;IACbC,cAAc,EAAE,UAAU;IAC1BC,MAAM,EAAE;EACZ,CAAC;EACDvD,IAAI,EAAE;IACFwD,SAAS,EAAE,MAAM;IACjBD,MAAM,EAAE,iBAAiB;IACzBE,OAAO,EAAE;EACb,CAAC;EACDhD,YAAY,EAAE;IACViD,KAAK,EAAE;EACX,CAAC;EACDlC,iBAAiB,EAAE;IACfkC,KAAK,EAAE;EACX,CAAC;EACDnC,iBAAiB,EAAE;IACfoC,UAAU,EAAE,MAAM;IAClBJ,MAAM,EAAE,MAAM;IACdG,KAAK,EAAE,KAAK;IACZE,MAAM,EAAE;EACZ,CAAC;EACDjB,YAAY,EAAE;IACV3D,QAAQ,EAAE,OAAO;IACjB6E,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,eAAe,EAAE,oBAAoB;IACrCC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAChB,CAAC;EACDxB,KAAK,EAAE;IACHqB,eAAe,EAAE,OAAO;IACxBR,OAAO,EAAE,MAAM;IACfY,YAAY,EAAE,KAAK;IACnBhB,KAAK,EAAE;EACX,CAAC;EACDJ,KAAK,EAAE;IACHI,KAAK,EAAE,MAAM;IACbiB,YAAY,EAAE,MAAM;IACpBb,OAAO,EAAE;EACb,CAAC;EACDP,UAAU,EAAE;IACRqB,WAAW,EAAE;EACjB,CAAC;EACDpB,WAAW,EAAE;IACTO,KAAK,EAAE;EACX;AACJ,CAAC;AAED,eAAehH,cAAc;AAAC,IAAA0G,EAAA;AAAAoB,YAAA,CAAApB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}