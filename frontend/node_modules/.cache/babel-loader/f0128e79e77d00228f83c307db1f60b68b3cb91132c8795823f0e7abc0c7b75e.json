{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\Desktop\\\\bjj-companion\\\\frontend\\\\src\\\\components\\\\TechniqueTable.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { useReactTable, getCoreRowModel, flexRender } from '@tanstack/react-table';\nimport { getPositions, getTechniqueTypes } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TechniqueTable = ({\n  techniques,\n  updateTechnique,\n  deleteTechnique\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(null);\n  const [editedTechnique, setEditedTechnique] = useState(null);\n  const [positions, setPositions] = useState([]);\n  const [techniqueTypes, setTechniqueTypes] = useState([]);\n  useEffect(() => {\n    const fetchPositions = async () => {\n      try {\n        const data = await getPositions();\n        setPositions(data);\n      } catch (error) {\n        console.error('Error al obtener posiciones:', error);\n      }\n    };\n    fetchPositions();\n  }, []);\n  useEffect(() => {\n    const fetchTechniqueTypes = async () => {\n      try {\n        const data = await getTechniqueTypes();\n        setTechniqueTypes(data);\n      } catch (error) {\n        console.error('Error al obtener tipos de técnica:', error);\n      }\n    };\n    fetchTechniqueTypes();\n  }, []);\n  const getPositionName = id => {\n    const position = positions.find(pos => pos._id === id);\n    return position ? position.name : 'Sin posición';\n  };\n  const getTechniqueTypeName = idArray => {\n    const names = idArray.map(id => {\n      const type = techniqueTypes.find(t => t._id === id);\n      return type ? type.name : 'Sin tipo';\n    }).join(', ');\n    return names;\n  };\n  const columns = useMemo(() => [{\n    accessorKey: 'name',\n    header: 'Nombre'\n  }, {\n    accessorKey: 'techniqueType',\n    header: 'Tipo',\n    cell: ({\n      getValue\n    }) => getTechniqueTypeName(getValue())\n  }, {\n    accessorKey: 'positionStart',\n    header: 'Posición Inicial',\n    cell: ({\n      getValue\n    }) => getPositionName(getValue())\n  }, {\n    accessorKey: 'endPosition',\n    header: 'Posición Final',\n    cell: ({\n      getValue\n    }) => getPositionName(getValue())\n  }, {\n    accessorKey: 'proficiencyLevel',\n    header: 'Proficiency Level'\n  }, {\n    accessorKey: 'giNoGi',\n    header: 'Gi/No Gi'\n  }, {\n    header: 'Acciones',\n    cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit(row.original),\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTechnique(row.original._id),\n        style: styles.deleteButton,\n        children: \"Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)\n  }], [positions, techniqueTypes]);\n  const table = useReactTable({\n    data: techniques,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n  const handleEdit = technique => {\n    setIsEditing(technique._id);\n    setEditedTechnique({\n      ...technique\n    });\n  };\n  const handleSave = () => {\n    updateTechnique(editedTechnique);\n    setIsEditing(null);\n  };\n  const handleCancel = () => {\n    setIsEditing(null);\n    setEditedTechnique(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Techniques\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            style: styles.cell,\n            children: flexRender(header.column.columnDef.header, header.getContext())\n          }, header.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this))\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: styles.cell,\n            children: flexRender(cell.column.columnDef.cell, cell.getContext())\n          }, cell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n_s(TechniqueTable, \"+QzRByLhM2ENfjmuqjDEvSe3rmo=\", false, function () {\n  return [useReactTable];\n});\n_c = TechniqueTable;\nconst styles = {\n  table: {\n    width: '100%',\n    borderCollapse: 'collapse',\n    border: '1px solid black'\n  },\n  cell: {\n    textAlign: 'left',\n    border: '1px solid black',\n    padding: '8px'\n  },\n  deleteButton: {\n    color: 'red'\n  }\n};\nexport default TechniqueTable;\nvar _c;\n$RefreshReg$(_c, \"TechniqueTable\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","useReactTable","getCoreRowModel","flexRender","getPositions","getTechniqueTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","TechniqueTable","techniques","updateTechnique","deleteTechnique","_s","isEditing","setIsEditing","editedTechnique","setEditedTechnique","positions","setPositions","techniqueTypes","setTechniqueTypes","fetchPositions","data","error","console","fetchTechniqueTypes","getPositionName","id","position","find","pos","_id","name","getTechniqueTypeName","idArray","names","map","type","t","join","columns","accessorKey","header","cell","getValue","row","children","onClick","handleEdit","original","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","deleteButton","table","technique","handleSave","handleCancel","getHeaderGroups","headerGroup","headers","column","columnDef","getContext","getRowModel","rows","getVisibleCells","_c","width","borderCollapse","border","textAlign","padding","color","$RefreshReg$"],"sources":["C:/Users/alber/Desktop/bjj-companion/frontend/src/components/TechniqueTable.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\r\nimport { useReactTable, getCoreRowModel, flexRender } from '@tanstack/react-table';\r\nimport { getPositions, getTechniqueTypes } from '../services/api';\r\n\r\nconst TechniqueTable = ({ techniques, updateTechnique, deleteTechnique }) => {\r\n    const [isEditing, setIsEditing] = useState(null);\r\n    const [editedTechnique, setEditedTechnique] = useState(null);\r\n    const [positions, setPositions] = useState([]);\r\n    const [techniqueTypes, setTechniqueTypes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchPositions = async () => {\r\n            try {\r\n                const data = await getPositions();\r\n                setPositions(data);\r\n            } catch (error) {\r\n                console.error('Error al obtener posiciones:', error);\r\n            }\r\n        };\r\n        fetchPositions();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchTechniqueTypes = async () => {\r\n            try {\r\n                const data = await getTechniqueTypes();\r\n                setTechniqueTypes(data);\r\n            } catch (error) {\r\n                console.error('Error al obtener tipos de técnica:', error);\r\n            }\r\n        };\r\n        fetchTechniqueTypes();\r\n    }, []);\r\n\r\n    const getPositionName = (id) => {\r\n        const position = positions.find((pos) => pos._id === id);\r\n        return position ? position.name : 'Sin posición';\r\n    };\r\n\r\n    const getTechniqueTypeName = (idArray) => {\r\n        const names = idArray\r\n            .map((id) => {\r\n                const type = techniqueTypes.find((t) => t._id === id);\r\n                return type ? type.name : 'Sin tipo';\r\n            })\r\n            .join(', ');\r\n        return names;\r\n    };\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            { accessorKey: 'name', header: 'Nombre' },\r\n            {\r\n                accessorKey: 'techniqueType',\r\n                header: 'Tipo',\r\n                cell: ({ getValue }) => getTechniqueTypeName(getValue()),\r\n            },\r\n            {\r\n                accessorKey: 'positionStart',\r\n                header: 'Posición Inicial',\r\n                cell: ({ getValue }) => getPositionName(getValue()),\r\n            },\r\n            {\r\n                accessorKey: 'endPosition',\r\n                header: 'Posición Final',\r\n                cell: ({ getValue }) => getPositionName(getValue()),\r\n            },\r\n            { accessorKey: 'proficiencyLevel', header: 'Proficiency Level' },\r\n            { accessorKey: 'giNoGi', header: 'Gi/No Gi' },\r\n            {\r\n                header: 'Acciones',\r\n                cell: ({ row }) => (\r\n                    <>\r\n                        <button onClick={() => handleEdit(row.original)}>Editar</button>\r\n                        <button\r\n                            onClick={() => deleteTechnique(row.original._id)}\r\n                            style={styles.deleteButton}\r\n                        >\r\n                            Eliminar\r\n                        </button>\r\n                    </>\r\n                ),\r\n            },\r\n        ],\r\n        [positions, techniqueTypes]\r\n    );\r\n\r\n    const table = useReactTable({\r\n        data: techniques,\r\n        columns,\r\n        getCoreRowModel: getCoreRowModel(),\r\n    });\r\n\r\n    const handleEdit = (technique) => {\r\n        setIsEditing(technique._id);\r\n        setEditedTechnique({ ...technique });\r\n    };\r\n\r\n    const handleSave = () => {\r\n        updateTechnique(editedTechnique);\r\n        setIsEditing(null);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsEditing(null);\r\n        setEditedTechnique(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Techniques</h1>\r\n        <table style={styles.table}>\r\n            <thead>\r\n                {table.getHeaderGroups().map((headerGroup) => (\r\n                    <tr key={headerGroup.id}>\r\n                        {headerGroup.headers.map((header) => (\r\n                            <th key={header.id} style={styles.cell}>\r\n                                {flexRender(header.column.columnDef.header, header.getContext())}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody>\r\n                {table.getRowModel().rows.map((row) => (\r\n                    <tr key={row.id}>\r\n                        {row.getVisibleCells().map((cell) => (\r\n                            <td key={cell.id} style={styles.cell}>\r\n                                {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                            </td>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    table: {\r\n        width: '100%',\r\n        borderCollapse: 'collapse',\r\n        border: '1px solid black',\r\n    },\r\n    cell: {\r\n        textAlign: 'left',\r\n        border: '1px solid black',\r\n        padding: '8px',\r\n    },\r\n    deleteButton: {\r\n        color: 'red',\r\n    },\r\n};\r\n\r\nexport default TechniqueTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}